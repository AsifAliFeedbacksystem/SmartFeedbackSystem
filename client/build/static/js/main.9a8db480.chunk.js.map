{"version":3,"sources":["components/responsiveFontSize.Component.js","redux/userSlice.js","config/apiUrl.js","user/home.Page.js","user/signUp.Page.js","components/header.Component.js","components/starRating.Component.js","user/feedback.Page.js","components/feedbackCard.Compnent.js","user/previousFeedback.Page.js","components/modal/editProfileModal.Component.js","user/userProfile.Page.js","admin/adminFeedbacks.Page.js","admin/adminProfile.Page.js","components/questionCard.Component.js","admin/adminQuestions.Page.js","components/publicFeedbackCard.Component.js","user/publicFeedbacks.Page.js","user/guestFeedback.js","components/guestFeedbackCard.Component.js","admin/adminGuestsFeedbacks.js","routes/routes.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["ResponsiveFontSize","props","theme","createTheme","responsiveFontSizes","ThemeProvider","children","userSlice","createSlice","name","initialState","user","reducers","addUser","state","action","payload","removeUser","actions","apiUrl","styles","windowheight","mainContainer","background","signInContainer","borderRadius","mt","xl","lg","md","sm","xs","mb","breakpoints","only","marginBottom","itemGridmargin","marginTop","iconsGeneral","color","headingsContainer","down","display","flexDirection","justifyContent","alignItems","headingsGeneral","fontWeight","marginLeft","starimage","width","divider","borderColor","registerButton","height","guestButton","withRouter","useState","email","setEmail","password","setPssword","useDispatch","useTheme","isWidth350","useMediaQuery","window","innerHeight","classes","useHistory","JSON","parse","localStorage","getItem","useEffect","history","push","axios","defaults","withCredentials","login","a","body","post","res","setItem","stringify","data","cogoToast","success","console","log","response","error","errorMsg","Grid","container","direction","sx","item","Typography","variant","align","Box","src","Button","endIcon","padding","onClick","secondContainer","TextField","onChange","e","target","value","type","fullWidth","label","Divider","signUpContainer","SignUpPage","userName","setUserName","phone1","setPhone1","setPassword","confirmPassword","setConfirmPassword","onSubmit","successMsg","required","to","logoutBtn","linksGeneral","textDecoration","navlinksGeneral","borderBottom","menuIconButton","border","Header","dropDownMenu","setDropDownMenu","role","logout","removeItem","AppBar","position","Toolbar","Hidden","activeStyle","style","smUp","IconButton","marginY","rating","fontSize","questionGrid","margin","ratingNumber","dividerGeneral","StarRatingComponent","setValue","textAlign","question","Rating","setRating","parseInt","textFieldGrid","xSpacing15","FeedBackPage","first","setFirst","second","setSecond","third","setThird","fourth","setfourth","fifth","setFifth","sixth","setSixth","seventh","setSeventh","eigth","setEigth","nineth","setNineth","tenth","setTenth","userFeedback","setUserFeedback","questions","setQuestions","get","onsubmit","avg","length","averageRating","Math","ceil","hideAfter","multiline","rows","placeholder","conatiner","pb","date_RatingContainer","editBtn","deleteBtn","btnsGrid","FeedbacksCard","cardData","refetchData","isEdit","setIsEdit","isWidth400px","date","time","feedback","userId","userEmail","userPhone","onDelete","delete","_id","status","onEdit","patch","defaultValue","PreviousFeedbackPage","feedbacks","setFeedbacks","reverse","map","EditProfileModal","userData","refetchUser","React","open","setOpen","handleClose","submit","Modal","onClose","crossIcon","p","bgcolor","top","left","transform","boxShadow","userImage","userDetailsGeneral","useerDetailsGrid","userDetailsMainContainer","timeRemainingGrid","UserProfilePage","displayUser","setDisplayUser","isXS","orientation","nextFeedbackDate","split","nextFeedbackTime","pointsGenerated","secondaryNav","showPublicFeedBacksContainer","paddingLeft","sortingContainer","searchingContainer","paddingTop","paddingBottom","searchBtn","DatePickerGrid","datePicker","ratingBox","latestFeedbacks","ratingSelect","sortingHeading","ml","AdminFeedbacksPage","generalFeedbacks","setGeneralFeedbacks","setDate","feedbacksByDate","setFeedbacksByDate","feedbacksByRating","setFeedbacksByRating","sortBylatestFeedbacks","useRef","sortByDate","sortByRating","searchingContainerRef","anchorEl","setAnchorEl","Boolean","day","setDay","handelLatestFeedbackDisplay","current","getFeedbacksByDate","getFeedbacksByRating","refetchFeedbacksByRating","refetchFeedbacksByDate","refetchGeneralFeedback","Switch","id","undefined","event","currentTarget","MenuListProps","MenuItem","ref","InputLabelProps","shrink","FormControl","InputLabel","Select","labelId","val","index","AdminProfilePage","QuestionCardComponent","cardvalue","setQuestion","onUpdate","addContainer","addBtn","addHeading","addTextField","questionsContainer","AdminQuestionsPage","addQuestion","size","image","PublicFeedbackCard","cardValue","isWidth340","isWidth400","readOnly","heading","PublicFeedbacksPage","GuestFeedBackPage","GuestFeedbackCard","AdminGuestFeedbacksPage","AppRoutes","exact","path","component","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","users","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a8db480.chunk.js","sourcesContent":["\r\n//material ui imoorts\r\nimport {\r\n    createTheme,\r\n    responsiveFontSizes,\r\n    ThemeProvider,\r\n} from '@mui/material/styles';\r\n\r\nconst ResponsiveFontSize = (props) => {\r\n    let theme = createTheme();\r\n    theme = responsiveFontSizes(theme);\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {props.children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default ResponsiveFontSize;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {}\r\n    },\r\n    reducers: {\r\n\r\n        addUser: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n\r\n        removeUser: (state, action) => {\r\n            state.user = null\r\n        }\r\n    }\r\n\r\n\r\n});\r\n\r\nexport const { addUser, removeUser } = userSlice.actions;\r\nexport default userSlice.reducer;","\r\nconst apiUrl = \"https://smart-feedback-system-api.herokuapp.com\";\r\n\r\nexport default apiUrl;","import { Grid, Typography, TextField, Button, Box } from \"@mui/material\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport Divider from '@mui/material/Divider';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { usehistory, withRouter } from \"react-router-dom\"\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../redux/userSlice\";\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n    const [email, setEmail] = useState()\r\n    const [password, setPssword] = useState();\r\n    const dispatch = useDispatch();\r\n    const theme = useTheme();\r\n    const isWidth350 = useMediaQuery(\"(max-width:350px)\");\r\n    const windowheight = window.innerHeight;\r\n    const classes = styles(theme, windowheight);\r\n    const history = useHistory();\r\n    const user = JSON.parse(localStorage.getItem(\"user\")) ;\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            props.history.push(\"/user-profile\");\r\n        }\r\n    },[]);\r\n\r\n    // setting axios credentials \r\n    axios.defaults.withCredentials = true;\r\n\r\n    // handlers\r\n    const login = async (email, password) => {\r\n        try {\r\n            const body = { email, password }\r\n            const res = await axios.post(apiUrl+\"/api/user/login\", body);\r\n            localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n            // dispatch(addUser(res.data));\r\n            props.history.push(\"/user-profile\");\r\n            cogoToast.success(<h4>Logged in Successfuh3y</h4>);\r\n        }\r\n        catch (err) {\r\n            console.log(err?.response);\r\n            cogoToast.error(<h4>{err?.response?.data?.errorMsg}</h4>);\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <Grid container direction=\"row\" sx={{ ...classes.mainContainer }}>\r\n\r\n            {/* 1ST GRID */}\r\n            <Grid\r\n                item\r\n                container\r\n                flexDirection=\"column\"\r\n                justifyContent='center'\r\n                alignItems=\"start\"\r\n                sx={{ ...classes.headingsContainer }}\r\n                xs={12} sm={12} md={6} lg={6} xl={6}\r\n            >\r\n\r\n                <Typography variant=\"h2\" align=\"center\" sx={classes.headingsGeneral}>\r\n                    ABC... Company\r\n                </Typography>\r\n\r\n                <Typography variant=\"h4\" align=\"center\" sx={classes.headingsGeneral}>\r\n                    FeedBack Portal\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\" align=\"center\" sx={classes.headingsGeneral}>\r\n                    Want to share your point of view? We value your feedback\r\n                </Typography>\r\n\r\n                <Box sx={{ ...classes.starimage }}>\r\n                    <img\r\n                        width=\"100%\"\r\n                        src=\"assets/feedbackstars.png\"\r\n                    />\r\n                </Box>\r\n\r\n                {/* PUBLIC FEEDBACKS PAGE BUTTON */}\r\n                <Button\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                    sx={{ ...classes.headingsGeneral, padding: \"20px\", color: \"#4d79ff\", fontWeight: \"bold\", background: \"white\", borderRadius: \"30px\", marginTop: \"10px\" }}\r\n                    onClick={() => props.history.push(\"/public-reviews\")}\r\n                >\r\n                    <Typography variant=\"h6\">\r\n                        See Feedbacks\r\n                    </Typography>\r\n                </Button>\r\n\r\n\r\n            </Grid>\r\n\r\n            {/* 2ND GRID */}\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                xs={12} sm={12} md={6} lg={6} xl={6}\r\n                sx={{ ...classes.secondContainer }}\r\n            >\r\n\r\n                {/* SIGN IN CONTAINER */}\r\n                <Grid\r\n                    item\r\n                    container\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    sx={classes.signInContainer}\r\n                    xs={isWidth350 ? 11 : 10.5} sm={8} md={8} lg={7} xl={7}\r\n                >\r\n\r\n                    {/* SIGN UP HEADING */}\r\n                    <Grid item xs={10} sm={10} md={8} lg={10} xl={10} sx={{ ...classes.itemGridmargin }}>\r\n                        <Typography variant=\"h4\" fontWeight=\"bold\" align=\"center\" >Sign In</Typography>\r\n                    </Grid>\r\n\r\n                    {/* EMAIL TXT FIELD */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"end\"\r\n                        sx={{ ...classes.itemGridmargin }}\r\n                    >\r\n                        <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                            <EmailIcon sx={{ ...classes.iconsGeneral }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField onChange={(e) => setEmail(e.target.value)} type=\"email\" variant=\"standard\" fullWidth label=\"E-mail\" />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    {/* PASSWORD TXT FIELD */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"end\"\r\n                        sx={{ ...classes.itemGridmargin }}\r\n                    >\r\n                        <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                            <LockIcon sx={{ ...classes.iconsGeneral }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={(e) => setPssword(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} sm={10} md={8} lg={10} xl={10} sx={{ ...classes.itemGridmargin }}>\r\n                        <Button onClick={() => login(email, password)} variant=\"contained\" fullWidth>Sign In</Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} sm={10} md={8} lg={10} xl={10} sx={{ ...classes.itemGridmargin }}>\r\n                        <Divider\r\n                            sx={classes.divider}\r\n                        >Register</Divider>\r\n                    </Grid>\r\n\r\n                    {/* REGISTER BUTTON */}\r\n                    <Grid item xs={9} sm={9} md={7} lg={9} xl={9} sx={{ ...classes.itemGridmargin }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            sx={classes.registerButton}\r\n                            onClick={() => props.history.push(\"/signup\")}\r\n                        >\r\n                            Create new account\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} sm={10} md={8} lg={10} xl={10} sx={{ ...classes.itemGridmargin }}>\r\n                        <Divider\r\n                            sx={classes.divider}\r\n                        >\r\n                            Guest\r\n                        </Divider>\r\n                    </Grid>\r\n\r\n                    {/* GUEST FEEDBACK BUTTON */}\r\n                    <Grid item xs={9} sm={9} md={7} lg={9} xl={9} sx={{ ...classes.itemGridmargin }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            sx={{...classes.guestButton}}\r\n                            onClick={() => props.history.push(\"/guest-feedback\")}\r\n                        >\r\n                            Give Feedback as a guest\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </>);\r\n};\r\n\r\nconst styles = (theme, windowheight) => {\r\n    return ({\r\n        mainContainer: {\r\n            background: \"#4d79ff\",\r\n            // height: windowheight\r\n        },\r\n        signInContainer: {\r\n            background: \"white\",\r\n            borderRadius: \"15px\",\r\n            mt:{xl:10, lg:10, md:10,sm:5, xs:2},\r\n            mb:{xl:10, lg:10, md:10,sm:5, xs:2},\r\n            [theme.breakpoints.only(\"xs\")]: {\r\n                marginBottom: \"100px\"\r\n            }\r\n        },\r\n        itemGridmargin: {\r\n            marginTop: \"2vh\",\r\n            marginBottom: \"2vh\",\r\n\r\n        },\r\n        iconsGeneral: {\r\n            color: \"#4d79ff\"\r\n        },\r\n        headingsContainer: {\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n        },\r\n        headingsGeneral: {\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            marginLeft: \"15%\",\r\n            [theme.breakpoints.down(\"md\")]: { marginLeft: 0 }\r\n        },\r\n        starimage: {\r\n            marginLeft: \"15%\",\r\n            [theme.breakpoints.down(\"md\")]: { marginLeft: 0, width: \"30%\" },\r\n            [theme.breakpoints.down(\"sm\")]: { display: \"none\" }\r\n        },\r\n        divider: {\r\n            \"& .MuiDivider-wrapper\": { color: \"#737373\" },\r\n            \"&.MuiDivider-root:before\": { borderColor: \"#c3c3c3\" },\r\n            \"&.MuiDivider-root:after\": { borderColor: \"#c3c3c3\" },\r\n        },\r\n        registerButton: {\r\n            background: \"green\",\r\n            height: \"60px\",\r\n            marginBottom: \"10px\"\r\n        },\r\n        guestButton: {\r\n            height: \"60px\",\r\n            marginBottom: \"10px\"\r\n        },\r\n    });\r\n};\r\n\r\n\r\nexport default withRouter(HomePage);","import { Grid, Button, TextField, Typography } from \"@mui/material\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport react, { useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\nconst SignUpPage = () => {\r\n    const [email, setEmail] = useState();\r\n    const [userName, setUserName] = useState();\r\n    const [phone1, setPhone1] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [confirmPassword, setConfirmPassword] = useState();\r\n\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const isWidth350 = useMediaQuery(\"(max-width:350px)\");\r\n    const windowheight = window.innerHeight;\r\n    const classes = styles(theme, windowheight);\r\n\r\n\r\n    // console.log(email, userName, phone1, password, confirmPassword);\r\n\r\n    const onSubmit = async (email, userName, phone1, password, confirmPassword) => {\r\n\r\n        if (password !== confirmPassword) {\r\n            cogoToast.error(<h4>passwords must match</h4>);           \r\n             return null;\r\n        }\r\n\r\n        try {\r\n            const body = { email, userName, phone1, password, confirmPassword };\r\n            const res = await axios.post(apiUrl+\"/api/user/\", body);\r\n            cogoToast.success(<h4>{res.data.successMsg}</h4>);\r\n            history.push(\"/\");\r\n\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                sx={classes.mainContainer}>\r\n\r\n                {/* SIGN UP CONTAINER */}\r\n                <Grid\r\n                    item\r\n                    container\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    xs={isWidth350 ? 11 : 10.5} sm={7} md={5} lg={5} xl={4}\r\n                    sx={classes.signUpContainer}>\r\n\r\n                    {/* SIGN UP HEADING */}\r\n                    <Grid item xs={10} sm={10} md={8} lg={10} xl={10} sx={{ ...classes.itemGridmargin }}>\r\n                        <Typography variant=\"h4\" fontWeight=\"bold\" align=\"center\" >Sign Up</Typography>\r\n                    </Grid>\r\n\r\n\r\n                    {/* EMAIL TXT FIELD */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"end\"\r\n                        sx={{ ...classes.itemGridmargin }}\r\n                    >\r\n                        <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                            <EmailIcon sx={{ ...classes.iconsGeneral }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField onChange={(e) => setEmail(e.target.value)} type=\"email\" required variant=\"standard\" fullWidth label=\"E-mail\" />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    {/* USER NAME TXT FIELD */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"end\"\r\n                        sx={{ ...classes.itemGridmargin }}\r\n                    >\r\n                        <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                            <PersonIcon sx={{ ...classes.iconsGeneral }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                fullWidth label=\"Username\"\r\n                                onChange={(e) => setUserName(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n\r\n                    {/* PHONEs TXT FIELD */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"end\"\r\n                        sx={{ ...classes.itemGridmargin }}\r\n                    >\r\n                        <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                            <LocalPhoneIcon sx={{ ...classes.iconsGeneral }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                type=\"email\"\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"Phone\"\r\n                                onChange={(e) => setPhone1(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    {/* PASSWORD TXT FIELD */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"end\"\r\n                        sx={{ ...classes.itemGridmargin }}\r\n                    >\r\n                        <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                            <LockIcon sx={{ ...classes.iconsGeneral }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n\r\n                    {/*CONFIRM PASSWORD TXT FIELD */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"end\"\r\n                        sx={{ ...classes.itemGridmargin }}\r\n                    >\r\n                        <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                            <LockIcon sx={{ ...classes.iconsGeneral }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                variant=\"standard\"\r\n                                fullWidth label=\"Confirm password\"\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    {/* REGISTER BUTTON */}\r\n                    <Grid item xs={10} sm={10} md={8} lg={10} xl={10} sx={{ ...classes.itemGridmargin }}>\r\n                        <Button onClick={() => onSubmit(email, userName, phone1, password, confirmPassword)} variant=\"contained\" fullWidth>\r\n                            Register User\r\n                        </Button>\r\n                        <Typography variant=\"subtitle2\" align=\"center\" sx={{ marginTop: \"15px\" }} >\r\n                            <Link to=\"/\">\r\n                                Already registerd? Signin\r\n                            </Link>\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst styles = (theme, windowheight) => {\r\n    return (\r\n        {\r\n            mainContainer: {\r\n                background: \"#4d79ff\",\r\n                // height: windowheight\r\n            },\r\n            signUpContainer: {\r\n                background: \"white\",\r\n                borderRadius: \"15px\",\r\n                mt: {xs:2, sm:2, md:5, lg:5, xl:5 },\r\n                marginBottom: \"10vh\"\r\n            },\r\n            itemGridmargin: {\r\n                marginTop: \"3vh\",\r\n                marginBottom: \"3vh\",\r\n\r\n            },\r\n            iconsGeneral: {\r\n                color: \"#4d79ff\"\r\n            }\r\n\r\n        }\r\n    );\r\n};\r\n\r\n\r\nexport default SignUpPage;","import react, { useState, useEffect } from \"react\";\r\nimport { AppBar, Toolbar, Grid, Typography, Button, Hidden, IconButton } from \"@mui/material\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\"\r\nimport cogoToast from 'cogo-toast';\r\n\r\n\r\nconst Header = (props) => {\r\n    const [dropDownMenu, setDropDownMenu] = useState(false);\r\n    const history = useHistory();\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    // const role = \"user\";\r\n\r\n    // useEffect(async () => {\r\n    //     if (!user){\r\n    //         history.push(\"/\")\r\n    //     }\r\n    // }, [])\r\n\r\n    if (!user) return null\r\n\r\n    const role = user ? user.role : null;\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"user\");\r\n        history.push(\"/\")\r\n        cogoToast.success(<h3>logged out</h3>);\r\n\r\n    }\r\n\r\n    return (<>\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar>\r\n\r\n                {/* desktop size menu bar */}\r\n                <Hidden only=\"xs\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                    >\r\n                        {\r\n                            role == \"user\" ?\r\n                                <>\r\n                                    {/* User Navlinks */}\r\n\r\n                                    <Grid\r\n                                        item\r\n                                        container\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"flex-end\"\r\n                                        sm={9} md={9} lg={9} xl={9}\r\n                                    >\r\n                                        <NavLink\r\n                                            to=\"/user-profile\"\r\n                                            activeStyle={classes.navlinksGeneral}\r\n                                            style={classes.linksGeneral}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\" >\r\n                                                Profile\r\n                                            </Typography>\r\n                                        </NavLink>\r\n\r\n                                        <NavLink\r\n                                            to=\"/previous-feedbacks\"\r\n                                            activeStyle={classes.navlinksGeneral}\r\n                                            style={classes.linksGeneral}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\" >\r\n                                                Previous Feedbacks\r\n                                            </Typography>\r\n                                        </NavLink>\r\n\r\n                                        <NavLink\r\n                                            to=\"/feedback\"\r\n                                            activeStyle={classes.navlinksGeneral}\r\n                                            style={classes.linksGeneral}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\" >\r\n                                                Feedback\r\n                                            </Typography>\r\n                                        </NavLink>\r\n                                    </Grid>\r\n                                </> :\r\n                                <>\r\n                                    {/* Admin Navlinks */}\r\n\r\n                                    <Grid\r\n                                        item\r\n                                        container\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"flex-end\"\r\n                                        sm={9} md={9} lg={9} xl={9}\r\n                                    >\r\n                                        <NavLink\r\n                                            to=\"/admin-profile\"\r\n                                            activeStyle={classes.navlinksGeneral}\r\n                                            style={classes.linksGeneral}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\" >\r\n                                                Profile\r\n                                            </Typography>\r\n                                        </NavLink>\r\n\r\n                                        <NavLink\r\n                                            to=\"/admin-feedbacks\"\r\n                                            activeStyle={classes.navlinksGeneral}\r\n                                            style={classes.linksGeneral}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\" >\r\n                                                Feedbacks\r\n                                            </Typography>\r\n                                        </NavLink>\r\n\r\n                                        <NavLink\r\n                                            to=\"/admin-guest-feedbacks\"\r\n                                            activeStyle={classes.navlinksGeneral}\r\n                                            style={classes.linksGeneral}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\" >\r\n                                                Guest Feedbacks\r\n                                            </Typography>\r\n                                        </NavLink>\r\n\r\n                                        <NavLink\r\n                                            to=\"/admin-questions\"\r\n                                            activeStyle={classes.navlinksGeneral}\r\n                                            style={classes.linksGeneral}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\" >\r\n                                                Questions\r\n                                            </Typography>\r\n                                        </NavLink>\r\n\r\n                                    </Grid>\r\n                                </>\r\n\r\n                        }\r\n\r\n                        <Grid\r\n                            item\r\n                            container\r\n                            justifyContent=\"flex-end\"\r\n                            alignItems=\"center\"\r\n                            sm={3} md={3} lg={3} xl={3}\r\n                        >\r\n                            <Button onClick={() => logout()} sx={classes.logoutBtn} variant=\"contained\">\r\n                                <Typography variant=\"caption\">\r\n                                    Logout\r\n                                </Typography>\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Hidden>\r\n\r\n\r\n\r\n                {/* Mobile size menu bar */}\r\n                <Hidden smUp={true}>\r\n                    <Grid container direction=\"column\">\r\n\r\n                        <Grid item sx={{ marginTop: dropDownMenu ? \"12px\" : 0 }}>\r\n                            <IconButton\r\n                                onClick={() => setDropDownMenu(!dropDownMenu)}\r\n                                sx={classes.menuIconButton} >\r\n                                <MenuIcon sx={{ color: \"white\" }} />\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                        <Grid item container direction=\"column\" sx={{ marginY: \"10px\", display: dropDownMenu ? \"block\" : \"none\" }}>\r\n\r\n                            {\r\n                                role == \"user\" ?\r\n                                    <>\r\n                                        <Grid\r\n                                            item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justifyContent=\"space-evenly\"\r\n                                            alignItems=\"flex-start\"\r\n                                            sx={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                                        >\r\n\r\n\r\n                                            <NavLink\r\n                                                to=\"/user-profile\"\r\n                                                activeStyle={classes.navlinksGeneral}\r\n                                                style={classes.linksGeneral}\r\n                                            >\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    Username\r\n                                                </Typography>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink\r\n                                                to=\"/previous-feedbacks\"\r\n                                                activeStyle={classes.navlinksGeneral}\r\n                                                style={classes.linksGeneral}\r\n                                            >\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    Previous Feedbacks\r\n                                                </Typography>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink\r\n                                                to=\"/feedback\"\r\n                                                activeStyle={classes.navlinksGeneral}\r\n                                                style={classes.linksGeneral}\r\n                                            >\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    Feedback\r\n                                                </Typography>\r\n                                            </NavLink>\r\n\r\n                                        </Grid>\r\n                                    </> :\r\n                                    <>\r\n                                        <Grid\r\n                                            item\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justifyContent=\"space-evenly\"\r\n                                            alignItems=\"flex-start\"\r\n                                            sx={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                                        >\r\n\r\n                                            <NavLink\r\n                                                to=\"/admin-profile\"\r\n                                                activeStyle={classes.navlinksGeneral}\r\n                                                style={classes.linksGeneral}\r\n                                            >\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    Profile\r\n                                                </Typography>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink\r\n                                                to=\"/admin-feedbacks\"\r\n                                                activeStyle={classes.navlinksGeneral}\r\n                                                style={classes.linksGeneral}\r\n                                            >\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    Feedbacks\r\n                                                </Typography>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink\r\n                                                to=\"/admin-guest-feedbacks\"\r\n                                                activeStyle={classes.navlinksGeneral}\r\n                                                style={classes.linksGeneral}\r\n                                            >\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    Guest Feedbacks\r\n                                                </Typography>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink\r\n                                                to=\"/admin-questions\"\r\n                                                activeStyle={classes.navlinksGeneral}\r\n                                                style={classes.linksGeneral}\r\n                                            >\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    Questions\r\n                                                </Typography>\r\n                                            </NavLink>\r\n\r\n                                        </Grid>\r\n                                    </>\r\n                            }\r\n\r\n                            <Grid\r\n                                item\r\n                                container\r\n                                justifyContent=\"flex-strat\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Button onClick={() => logout()} sx={classes.logoutBtn} variant=\"contained\">\r\n                                    <Typography variant=\"caption\">\r\n                                        Logout\r\n                                    </Typography>\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Hidden>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n    </>)\r\n};\r\n\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        logoutBtn: {\r\n            background: \"white\",\r\n            color: \"blue\",\r\n            borderRadius: \"20px\",\r\n            \"&:hover\": {\r\n                background: \"lightgray\"\r\n            }\r\n        },\r\n        linksGeneral: {\r\n            color: \"white\",\r\n            textDecoration: \"none\",\r\n            padding: \"3px\",\r\n            marginLeft: \"5%\"\r\n        },\r\n        navlinksGeneral: {\r\n            color: \"white\",\r\n            textDecoration: \"none\",\r\n            borderBottom: \"3px solid white\",\r\n        },\r\n        menuIconButton: {\r\n            border: \"2.5px solid white\",\r\n            padding: \"2px\",\r\n            borderRadius: \"8px\",\r\n        }\r\n    });\r\n};\r\n\r\nexport default Header;","import react, { useState } from \"react\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Rating from '@mui/material/Rating';\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Divider from '@mui/material/Divider';\r\n\r\n\r\n\r\nconst StarRatingComponent = (props) => {\r\n    const [value, setValue] = useState(1);\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    return (<>\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"start\"\r\n            alignItems=\"center\"\r\n        >\r\n\r\n            <Grid\r\n                item\r\n                textAlign={\"start\"}\r\n                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                sx={{ ...classes.questionGrid }}>\r\n                <Typography variant=\"h6\">\r\n                    {props.question}\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"start\"\r\n                alignItems='center'\r\n                xs={11} sm={11} md={11} lg={11} xl={11}\r\n            >\r\n                <Rating\r\n                    sx={classes.rating}\r\n                    onChange={(e) => {\r\n                        props.setRating(parseInt(e.target.value))\r\n                        setValue(e.target.value)\r\n                    }}\r\n                    value={value}\r\n                />\r\n                <Typography variant=\"body1\" sx={classes.ratingNumber}>\r\n                    {value}/5\r\n                </Typography>\r\n            </Grid>\r\n\r\n        </Grid>\r\n        <Divider sx={{ ...classes.dividerGeneral }} />\r\n    </>)\r\n};\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        rating: {\r\n            color: \"#4d79ff\",\r\n            fontSize: \"40px\",\r\n            [theme.breakpoints.down(\"sm\")]: { fontSize: '30px' }\r\n        },\r\n        questionGrid: {\r\n            margin: \"5px\",\r\n            marginLeft: \"0.7%\"\r\n        },\r\n        ratingNumber: {\r\n            marginLeft: \"2%\"\r\n        },\r\n        dividerGeneral: {\r\n            margin: \"15px\", \"&.MuiDivider-root\": { borderColor: \"#c3c3c3\" }\r\n        },\r\n    });\r\n};\r\n\r\nexport default StarRatingComponent;","import react, { useEffect, useState } from \"react\";\r\nimport { Grid, Typography, Button, TextField } from \"@mui/material\";\r\nimport Divider from '@mui/material/Divider';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Header from \"../components/header.Component.js\"\r\nimport StarRatingComponent from \"../components/starRating.Component.js\";\r\nimport {useHistory } from \"react-router-dom\";\r\nimport apiUrl from \"../config/apiUrl\"\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\n\r\n\r\nconst FeedBackPage = (props) => {\r\n    const [first, setFirst] = useState(0);\r\n    const [second, setSecond] = useState(0);\r\n    const [third, setThird] = useState(0);\r\n    const [fourth, setfourth] = useState(0);\r\n    const [fifth, setFifth] = useState(0);\r\n    const [sixth, setSixth] = useState(0);\r\n    const [seventh, setSeventh] = useState(0);\r\n    const [eigth, setEigth] = useState(0);\r\n    const [nineth, setNineth] = useState(0);\r\n    const [tenth, setTenth] = useState(0);\r\n    const [avgRating, setAvgRating] = useState();\r\n    const [userFeedback, setUserFeedback] = useState();\r\n    const [questions, setQuestions] = useState([]);\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    const user = JSON.parse(localStorage.getItem(\"user\")) ;\r\n\r\n\r\n    useEffect(async () => {\r\n\r\n        if(!user){\r\n            history.push(\"/\")\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/questions/\");\r\n            setQuestions(res.data)\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }, [])\r\n\r\n\r\n    \r\n    const onsubmit = async () => {\r\n        const first1 = first ? first : 0\r\n        const second1 = second ? second : 0\r\n        const third1 = third ? third : 0\r\n        const fourth1 = fourth ? fourth : 0\r\n        const fifth1 = fifth ? fifth : 0\r\n        const sixth1 = sixth ? sixth : 0\r\n        const seventh1 = seventh ? seventh : 0\r\n        const eigth1 = eigth ? eigth : 0\r\n        const nineth1 = nineth ? nineth : 0\r\n        const tenth1 = tenth ? tenth : 0\r\n        const avg = (first1 + second1 + third1 + fourth1 + fifth1 + sixth1 + seventh1 + eigth1 + nineth1 + tenth1) / questions.length;\r\n        const averageRating = Math.ceil(avg);\r\n        const body = { userFeedback, averageRating }\r\n        try {\r\n            const res = await axios.post(`${apiUrl}/api/feedbacks/`, body)\r\n            cogoToast.success(<h4>{res.data.successMsg}</h4>);\r\n            \r\n        } catch (err) {\r\n            console.log(err.response);\r\n            cogoToast.error(<h4>{err.response.data.errorMsg}</h4>,{hideAfter:5});\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <Header />\r\n        <br />\r\n        <Grid container justifyContent=\"space-evenly\">\r\n\r\n            <Grid\r\n                item\r\n                xs={11} sm={11} md={5.5} lg={5} xl={5}\r\n            >\r\n                {\r\n                    questions[0] ?\r\n                        <StarRatingComponent setRating={setFirst} question={questions[0]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[1] ?\r\n                        <StarRatingComponent setRating={setSecond} question={questions[1]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[2] ?\r\n                        <StarRatingComponent setRating={setThird} question={questions[2]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[3] ?\r\n                        <StarRatingComponent setRating={setfourth} question={questions[3]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[4] ?\r\n                        <StarRatingComponent setRating={setFifth} question={questions[4]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[5] ?\r\n                        <StarRatingComponent setRating={setSixth} question={questions[5]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[6] ?\r\n                        <StarRatingComponent setRating={setSeventh} question={questions[6]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[7] ?\r\n                        <StarRatingComponent setRating={setEigth} question={questions[7]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[8] ?\r\n                        <StarRatingComponent setRating={setNineth} question={questions[8]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[9] ?\r\n                        <StarRatingComponent setRating={setTenth} question={questions[9]?.question} />\r\n                        : null\r\n                }\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                xs={11} sm={11} md={5.5} lg={5} xl={5}\r\n                sx={classes.textFieldGrid}\r\n            >\r\n                <Typography variant=\"h6\">\r\n                    Share your feedback\r\n                </Typography>\r\n\r\n                <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rows={10}\r\n                    placeholder=\"write here...\"\r\n                    sx={{ ...classes.xSpacing15, background: \"#f2f2f2\" }}\r\n                    onChange={(e) => setUserFeedback(e.target.value)}\r\n                />\r\n                <Button variant=\"contained\" onClick={() => onsubmit()}>Submit</Button>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </>)\r\n};\r\n\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        dividerGeneral: {\r\n            margin: \"10px\", \"&.MuiDivider-root\": { borderColor: \"#c3c3c3\" }\r\n        },\r\n        textFieldGrid: {\r\n            [theme.breakpoints.down(\"md\")]: { marginTop: '50px' }\r\n        },\r\n        xSpacing15: {\r\n            marginTop: \"15px\",\r\n            marginBottom: \"15px\"\r\n        }\r\n    });\r\n};\r\n\r\nexport default FeedBackPage;","import { Grid, Typography, Button, TextField } from \"@mui/material\";\r\nimport Divider from '@mui/material/Divider';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\nimport { useState } from \"react\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\n\r\n\r\nconst FeedbacksCard = ({ cardData, refetchData }) => {\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [userFeedback, setUserFeedback] = useState()\r\n    // console.log(typeof reFetch)\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const isWidth400px = useMediaQuery(\"(max-width:400px)\");\r\n    const classes = styles(theme);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n\r\n    const date = cardData?.date + \"  |  \" + cardData?.time;\r\n    const rating = cardData?.averageRating;\r\n    const feedback = cardData?.userFeedback;\r\n    const userName = cardData?.userId?.userName;\r\n    const userEmail = cardData?.userId?.email;\r\n    const userPhone = cardData?.userId?.phone1;\r\n    const role = user.role;\r\n\r\n\r\n    const onDelete = async () => {\r\n        try {\r\n            const res = await axios.delete(`${apiUrl}/api/feedbacks/${cardData?._id}`)\r\n            cogoToast.success(<h4>{res?.data?.successMsg}</h4>);\r\n            refetchData();\r\n\r\n        } catch (err) {\r\n            console.log(err?.response);\r\n\r\n            if (err?.response?.status == 401) {\r\n                localStorage.removeItem(\"user\");\r\n                history.push(\"/\")\r\n                cogoToast.error(<h4>{err?.response?.data?.errorMsg}</h4>);\r\n            }\r\n            cogoToast.error(<h4>{err?.response?.data?.errorMsg}</h4>);\r\n        }\r\n    }\r\n\r\n\r\n    const onEdit = async () => {\r\n        try {\r\n            const body = { userFeedback }\r\n            const res = await axios.patch(`${apiUrl}/api/feedbacks/${cardData?._id}`, body)\r\n            cogoToast.success(<h4>{res?.data?.successMsg}</h4>);\r\n            refetchData();\r\n            \r\n        } catch (err) {\r\n            console.log(err);\r\n            console.log(err?.response);\r\n\r\n            if (err?.response?.status == 401) {\r\n                localStorage.removeItem(\"user\");\r\n                history.push(\"/\")\r\n                cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n            }\r\n            cogoToast.error(<h4>{err.response?.data?.errorMsg}</h4>);\r\n        }\r\n    }\r\n\r\n\r\n    return (<>\r\n        <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            sx={classes.conatiner}\r\n        >\r\n\r\n            {/* Date/rating container */}\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"start\"\r\n                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                sx={{ ...classes.date_RatingContainer }}\r\n            >\r\n                <Typography color=\"white\" variant=\"subtitle1\">\r\n                    Date: {date}\r\n                </Typography>\r\n\r\n                <Typography color=\"white\" variant=\"subtitle1\" sx={{ marginLeft: \"3%\" }}>\r\n                    Rating: {rating}/5\r\n                </Typography>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n            {/* divider */}\r\n            <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n                <Divider sx={{ ...classes.dividerGeneral }} />\r\n            </Grid>\r\n\r\n            {/* user-name container */}\r\n            {\r\n                role == \"admin\" ? (<>\r\n\r\n                    <Grid item container xs={11} sm={11} md={11} lg={11} xl={11}>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" sx={{ fontWeight: \"bold\", mb: 1, fontSize: \"18px\" }} >\r\n                            Name: {userName} &nbsp;&nbsp; | &nbsp;&nbsp;\r\n                        </Typography>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" sx={{ fontWeight: \"bold\", mb: 1, fontSize: \"18px\" }} >\r\n                            Email: {userEmail} &nbsp;&nbsp; | &nbsp;&nbsp;\r\n                        </Typography>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" sx={{ fontWeight: \"bold\", mb: 1, fontSize: \"18px\" }} >\r\n                            Phone {userPhone}\r\n                        </Typography>\r\n                    </Grid>\r\n                </>) : null\r\n            }\r\n\r\n            {/* Feedback container */}\r\n            {\r\n                isEdit ? (<>\r\n                    <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n\r\n                        <TextField\r\n                            type={\"text\"}\r\n                            multiline\r\n                            defaultValue={feedback}\r\n                            fullWidth\r\n                            onChange={(e) => setUserFeedback(e.target.value)}\r\n                            sx={{ border: \"2px solid white\", borderRadius: \"5px\", background: \"white\" }}\r\n                        />\r\n                    </Grid>\r\n\r\n                </>) : (<>\r\n\r\n                    <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" >\r\n                            {feedback}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </>)\r\n            }\r\n\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                sx={classes.btnsGrid}\r\n                justifyContent={isWidth400px ? \"center\" : null}\r\n            >\r\n\r\n                {/* checking user role  */}\r\n                {role == \"user\" ? (\r\n                    null\r\n                    // <Button onClick={()=> onDelete(cardData?._id) } sx={{ ...classes.deleteBtn }}>\r\n                    //     Delete\r\n                    // </Button>\r\n                ) : (<>\r\n\r\n\r\n                    {/* edit options */}\r\n                    {\r\n                        isEdit ? (<>\r\n                            <Button onClick={onEdit} sx={{ ...classes.editBtn }}>\r\n                                Save\r\n                            </Button>\r\n                            <Button onClick={() => setIsEdit(false)} sx={{ ...classes.editBtn }}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                        </>) :\r\n                            (<>\r\n                                <Button onClick={() => setIsEdit(true)} sx={{ ...classes.editBtn }}>\r\n                                    Edit\r\n                                </Button>\r\n                            </>)\r\n\r\n                    }\r\n\r\n                    <Button onClick={() => onDelete()} sx={{ ...classes.deleteBtn }}>\r\n                        Delete\r\n                    </Button>\r\n\r\n\r\n\r\n                </>)}\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </>);\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    conatiner: {\r\n        background: \"#4d79ff\",\r\n        borderRadius: \"10px\",\r\n        marginTop: \"25px\",\r\n        pb: 1.5\r\n    },\r\n    date_RatingContainer: {\r\n        marginTop: \"8px\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    dividerGeneral: {\r\n        margin: \"5px\",\r\n        marginBottom: \"10px\",\r\n        \"&.MuiDivider-root\": { borderColor: \"white\" },\r\n    },\r\n    editBtn: {\r\n        background: \"white\",\r\n        padding: \"2px\",\r\n        border: \" 2px solid white\",\r\n        margin: \"10px\",\r\n        marginLeft: \"0px\",\r\n        \"&:hover\": {\r\n            color: \"white\",\r\n        }\r\n    },\r\n    deleteBtn: {\r\n        background: \"#ff3333\",\r\n        padding: \"2px\",\r\n        color: \"white\",\r\n        margin: \"10px\",\r\n        marginLeft: \"0px\",\r\n        border: \"2px solid #ff3333\",\r\n        \"&:hover\": { border: \"2px solid white\" }\r\n    },\r\n    btnsGrid: {\r\n        // [theme.breakpoints.only(\"xs\")]: {\r\n        //     display:\"flex\",\r\n        //     justifyContent:\"center\",\r\n        //     alignItems:\"center\",\r\n        //     margin:\"15px\"\r\n        // }\r\n    }\r\n});\r\n\r\nexport default FeedbacksCard;","import react, { useEffect, useState } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Header from \"../components/header.Component\"\r\nimport FeedbacksCard from \"../components/feedbackCard.Compnent\"\r\nimport axios from \"axios\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\nconst PreviousFeedbackPage = (props) => {\r\n\r\n    const [feedbacks, setFeedbacks] = useState();\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`${apiUrl}/api/feedbacks/${user._id}`)\r\n            setFeedbacks(res.data.reverse());\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }, [])\r\n    return (<>\r\n        <Header />\r\n        <Grid\r\n            container\r\n            sx={{ marginLeft: \"4%\" }}\r\n        >\r\n\r\n            <Grid\r\n                item\r\n                xs={11} sm={9} md={7} lg={7} xl={7}\r\n                sx={{ marginTop: \"20px\" }}\r\n            >\r\n                <Typography variant=\"h4\">\r\n                    Previous Feedbacks\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                xs={11} sm={9} md={9} lg={9} xl={9}\r\n            >\r\n                {\r\n                    feedbacks?.map((cardData) => {\r\n                        return (\r\n\r\n                            <FeedbacksCard cardData={cardData} />\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    </>)\r\n};\r\n\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n\r\n    });\r\n};\r\n\r\nexport default PreviousFeedbackPage;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Grid, Button, TextField, Typography } from \"@mui/material\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { Link , useHistory} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport cogoToast from 'cogo-toast';\r\nimport apiUrl from \"../../config/apiUrl\"\r\n\r\n\r\n\r\n\r\nexport default function EditProfileModal({ userData ,refetchUser}) {\r\n    const [email, setEmail] = React.useState();\r\n    const [password, setPassword] = React.useState();\r\n    const [userName, setUserName] = React.useState();\r\n    const [phone1, setPhone1] = React.useState();\r\n\r\n    const history = useHistory();\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const isWidth350 = useMediaQuery(\"(max-width:350px)\");\r\n    const windowheight = window.innerHeight;\r\n    const classes = styles(theme, windowheight);\r\n\r\n    //   handlers\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const submit = async (userName, email, phone1, password) => {\r\n        try {\r\n            const body = { userName, email, phone1 , password };\r\n            const res = await axios.patch(apiUrl+\"/api/user/\", body);\r\n            refetchUser();\r\n            cogoToast.success(<h4>{res.data.successMsg}</h4>);\r\n        } catch (err) {\r\n            console.log(err.response);\r\n            cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" sx={{ background: \"#4d79ff\" }} onClick={handleOpen}>Change</Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n\r\n                    {/* xxxxxxxxxxxxxxxxxxxxxxx */}\r\n\r\n\r\n                    <Grid item container justifyContent={\"end\"}>\r\n                        <CloseIcon sx={classes.crossIcon} onClick={handleClose} />\r\n                    </Grid>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item>\r\n                        <Typography variant='h6' fontWeight={\"normal\"} align='center'>\r\n                            Edit profile\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {/* SIGN UP CONTAINER */}\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        xs={isWidth350 ? 11 : 10.5} sm={12} md={12} lg={12} xl={12}\r\n                        sx={classes.signUpContainer}>\r\n\r\n\r\n                        {/* EMAIL TXT FIELD */}\r\n                        <Grid\r\n                            item\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"end\"\r\n                            sx={{ ...classes.itemGridmargin }}\r\n                        >\r\n                            <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                                <EmailIcon sx={{ ...classes.iconsGeneral }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                                <TextField onChange={(e) => setEmail(e.target.value)} type=\"email\" required variant=\"standard\" fullWidth label=\"E-mail\" />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        {/* USER NAME TXT FIELD */}\r\n                        <Grid\r\n                            item\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"end\"\r\n                            sx={{ ...classes.itemGridmargin }}\r\n                        >\r\n                            <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                                <PersonIcon sx={{ ...classes.iconsGeneral }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    variant=\"standard\"\r\n                                    fullWidth label=\"Username\"\r\n                                    onChange={(e) => setUserName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        {/* PASSWORD TXT FIELD */}\r\n                        <Grid\r\n                            item\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"end\"\r\n                            sx={{ ...classes.itemGridmargin }}\r\n                        >\r\n                            <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                                <LockIcon sx={{ ...classes.iconsGeneral }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                                <TextField\r\n                                    type=\"password\"\r\n                                    variant=\"standard\"\r\n                                    fullWidth\r\n                                    label=\"Password\"\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        {/*Phone */}\r\n                        <Grid\r\n                            item\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"end\"\r\n                            sx={{ ...classes.itemGridmargin }}\r\n                        >\r\n                            <Grid item xs={isWidth350 ? 1.5 : 1} sm={1} md={1} lg={1} xl={1}>\r\n                                <LockIcon sx={{ ...classes.iconsGeneral }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    variant=\"standard\"\r\n                                    fullWidth \r\n                                    label=\"Phone\"\r\n                                    onChange={(e) => setPhone1(e.target.value)}\r\n                                    />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        {/* save button BUTTON */}\r\n                        <Grid item xs={10} sm={10} md={8} lg={10} xl={10} sx={{ ...classes.itemGridmargin }}>\r\n                            <Button variant=\"contained\" onClick={() => submit(userName, email, phone1, password)} >Save Changes</Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    {/* xxxxxxxxxxxxxxxxxxxxxxx */}\r\n\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = (theme, windowheight) => {\r\n    return (\r\n        {\r\n            mainContainer: {\r\n                background: \"#4d79ff\",\r\n                height: windowheight\r\n            },\r\n            signUpContainer: {\r\n                background: \"white\",\r\n                borderRadius: \"15px\",\r\n                // marginTop: \"10vh\",\r\n                // marginBottom: \"10vh\"\r\n            },\r\n            itemGridmargin: {\r\n                marginTop: \"2vh\",\r\n                marginBottom: \"2vh\",\r\n\r\n            },\r\n            iconsGeneral: {\r\n                color: \"#4d79ff\"\r\n            },\r\n            crossIcon: {\r\n                color: \"grey\",\r\n                borderRadius: \"100%\",\r\n                p: 1,\r\n                \"&:hover\": {\r\n                    bgcolor: \"lightgrey\"\r\n                }\r\n            }\r\n\r\n        }\r\n    );\r\n};\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: { xs: \"75%\", sm: \"50%\", md: \"30%\", lg: \"30%\", xl: \"30%\" },\r\n    bgcolor: 'white',\r\n    // border: '1px solid #000',\r\n    borderRadius: \"20px\",\r\n    boxShadow: 24,\r\n    p: 3,\r\n};\r\n","import react, { useEffect, useState } from \"react\";\r\nimport { Grid, Typography, Button, Divider } from \"@mui/material\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport Header from \"../components/header.Component.js\"\r\nimport EditProfileModal from \"../components/modal/editProfileModal.Component\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\n\r\n\r\nconst UserProfilePage = (props) => {\r\n    const [displayUser, setDisplayUser] = useState();\r\n    const [reLoad, setReLoad] = useState(0);\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    const isXS = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n    const user = JSON.parse(localStorage.getItem(\"user\")) ;\r\n\r\n    useEffect(async () => {\r\n        if (!user){\r\n            history.push(\"/\")\r\n        }\r\n        \r\n        if (user.role == \"admin\") {\r\n            history.push(\"/admin-profile\")\r\n        }\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`${apiUrl}/api/user/${user._id}`);\r\n            setDisplayUser(res.data);\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }, [])\r\n\r\n    const refetchUser= async()=>{\r\n        try {\r\n            const res = await axios.get(`${apiUrl}/api/user/${user._id}`);\r\n            setDisplayUser(res.data);\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <Header />\r\n        <br />\r\n        <br />\r\n        {/* USER DETAILS GRID */}\r\n        <Grid container justifyContent=\"center\" >\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                xs={7} sm={5} md={3} lg={3} xl={3}\r\n            >\r\n                <img src=\"/assets/userImage.jpg\" width=\"60%\" style={classes.userImage} />\r\n            </Grid>\r\n\r\n            <Grid item sm={2} md={1} lg={1} xl={1} sx={{ display: isXS ? \"none\" : \"block\" }}>\r\n                <Divider orientation=\"vertical\" sx={classes.divider}>\r\n                    Details\r\n                </Divider>\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                xs={10} sm={5} md={5} lg={5} xl={5}\r\n                sx={classes.userDetailsMainContainer}\r\n            >\r\n\r\n                <Grid item container direction=\"row\" sx={classes.useerDetailsGrid}>\r\n                    <Typography variant=\"body1\" >First Name:</Typography>\r\n                    <Typography variant=\"body1\" sx={classes.userDetailsGeneral} >{displayUser?.userName}</Typography>\r\n                </Grid>\r\n\r\n                <Grid item container direction=\"row\" sx={classes.useerDetailsGrid} >\r\n                    <Typography variant=\"body1\" >Phone:</Typography>\r\n                    <Typography variant=\"body1\" sx={classes.userDetailsGeneral}>{displayUser?.phone1}</Typography>\r\n                </Grid>\r\n\r\n                <Grid item container direction=\"row\" sx={classes.useerDetailsGrid}>\r\n                    <Typography variant=\"body1\" >Email:</Typography>\r\n                    <Typography variant=\"body1\" sx={classes.userDetailsGeneral}>{displayUser?.email}</Typography>\r\n                </Grid>\r\n\r\n                <Grid item container direction=\"row\" sx={classes.useerDetailsGrid}>\r\n                    {/* <Button variant=\"contained\"  sx={{ background: \"#4d79ff\" }}>\r\n                        <Typography variant=\"caption\">\r\n                            Change\r\n                        </Typography>\r\n                    </Button> */}\r\n                    <EditProfileModal refetchUser={refetchUser} userData={displayUser} />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n        <br />\r\n        <Divider sx={classes.divider} variant=\"middle\" />\r\n        <br />\r\n        <br />\r\n        <Grid container justifyContent=\"space-evenly\">\r\n\r\n            {/* TIMER CONTAINER GRID */}\r\n            <Grid\r\n                item\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                xs={11} sm={5.5} md={5.5} lg={5} xl={5}\r\n            >\r\n                <Grid item >\r\n                    <Typography variant=\"h5\" fontWeight=\"bold\" align=\"center\">\r\n                        Next Feedback After\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    sx={classes.timeRemainingGrid}\r\n                >\r\n                    <Typography variant=\"h4\" fontWeight=\"bold\" align=\"center\">\r\n                        {displayUser?.nextFeedbackDate?.split(\"T\")[0]} | {displayUser?.nextFeedbackTime}\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            {/* GENERATED POINTS GRID */}\r\n            <Grid\r\n                item\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                xs={11} sm={5.5} md={5.5} lg={5} xl={5}\r\n            >\r\n                <Grid item >\r\n                    <Typography variant=\"h5\" fontWeight=\"bold\" align=\"center\">\r\n                        Generated Points\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    sx={classes.timeRemainingGrid}\r\n                >\r\n                    <Typography variant=\"h4\" fontWeight=\"bold\" align=\"center\">\r\n                        {displayUser?.pointsGenerated} Points\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    </>)\r\n};\r\n\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        userImage: {\r\n            borderRadius: \"50%\",\r\n            border: \"10px solid #4d79ff\",\r\n            padding: \"3px\"\r\n        },\r\n        divider: {\r\n            \"& .MuiDivider-wrapper\": { color: \"#737373\" },\r\n            \"&.MuiDivider-root:before\": { borderColor: \"#B8B8B8\" },\r\n            \"&.MuiDivider-root:after\": { borderColor: \"#B8B8B8\" },\r\n        },\r\n        userDetailsGeneral: {\r\n            marginLeft: \"15px\"\r\n        },\r\n        useerDetailsGrid: {\r\n            marginY: \"10px\"\r\n        },\r\n        userDetailsMainContainer: {\r\n            [theme.breakpoints.only(\"xs\")]: {\r\n                marginTop: \"20px\"\r\n            }\r\n        },\r\n        timeRemainingGrid: {\r\n            padding: \"30px\",\r\n            background: \"#4d79ff\",\r\n            borderRadius: \"20px\",\r\n            color: \"white\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"30px\",\r\n            boxShadow: \"12px 12px 22px -13px #000000\",\r\n            width: \"80%\"\r\n        }\r\n    });\r\n};\r\n\r\nexport default UserProfilePage;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport Switch from '@mui/material/Switch';\r\nimport Header from \"../components/header.Component\"\r\nimport { useTheme } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FeedbacksCard from \"../components/feedbackCard.Compnent\"\r\nimport axios from \"axios\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\n\r\n\r\n\r\nconst AdminFeedbacksPage = () => {\r\n    const [generalFeedbacks, setGeneralFeedbacks] = useState([]);\r\n    const [rating, setRating] = React.useState();\r\n    const [date, setDate] = React.useState();\r\n    const [feedbacksByDate, setFeedbacksByDate] = React.useState([]);\r\n    const [feedbacksByRating, setFeedbacksByRating] = React.useState([]);\r\n\r\n    const theme = useTheme();\r\n    const sortBylatestFeedbacks = useRef();\r\n    const sortByDate = useRef();\r\n    const sortByRating = useRef();\r\n    const searchingContainerRef = useRef();\r\n    const classes = styles(theme);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n\r\n    const [day, setDay] = React.useState();\r\n    console.log(date)\r\n    console.log(rating)\r\n    console.log(day);\r\n\r\n    // sorting dropdown\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // sorting handlers\r\n    const handelDateDisplay = () => {\r\n        searchingContainerRef.current.style.display = \"block\"\r\n        sortByDate.current.style.display = \"block\"\r\n        sortByRating.current.style.display = \"none\"\r\n        sortBylatestFeedbacks.current.style.display = \"none\"\r\n    };\r\n    const handelRatingDisplay = () => {\r\n        searchingContainerRef.current.style.display = \"block\"\r\n        sortByRating.current.style.display = \"block\"\r\n        sortByDate.current.style.display = \"none\"\r\n        sortBylatestFeedbacks.current.style.display = \"none\"\r\n    };\r\n    const handelLatestFeedbackDisplay = async () => {\r\n        searchingContainerRef.current.style.display = \"none\"\r\n        sortBylatestFeedbacks.current.style.display = \"none\"\r\n        sortByRating.current.style.display = \"none\"\r\n        sortByDate.current.style.display = \"none\"\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/feedbacks/\");\r\n            setGeneralFeedbacks(res.data.reverse());\r\n            setFeedbacksByRating([]);\r\n            setFeedbacksByDate([]);\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/feedbacks/\");\r\n            setGeneralFeedbacks(res.data.reverse());\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const getFeedbacksByDate = async () => {\r\n        try {\r\n            const body = { date }\r\n            const res = await axios.post(apiUrl+\"/api/feedbacks/feedbacksByDate\", body)\r\n            setFeedbacksByDate(res.data.reverse());\r\n            setGeneralFeedbacks([]);\r\n            setFeedbacksByRating([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n    const getFeedbacksByRating = async () => {\r\n        try {\r\n            const body = { rating }\r\n            const res = await axios.post(apiUrl+\"/api/feedbacks/feedbacksByRating\", body)\r\n            setFeedbacksByRating(res.data.reverse());\r\n            setFeedbacksByDate([]);\r\n            setGeneralFeedbacks([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // REFETCH DATA FROM API\r\n\r\n    const refetchFeedbacksByRating = async () => {\r\n        try {\r\n            const body = { rating }\r\n            const res = await axios.post(apiUrl+\"/api/feedbacks/feedbacksByRating\", body)\r\n            setFeedbacksByRating(res.data.reverse());\r\n            setFeedbacksByDate([]);\r\n            setGeneralFeedbacks([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n\r\n    const refetchFeedbacksByDate = async () => {\r\n        try {\r\n            const body = { date }\r\n            const res = await axios.post(apiUrl+\"/api/feedbacks/feedbacksByDate\", body)\r\n            setFeedbacksByDate(res.data.reverse());\r\n            setGeneralFeedbacks([]);\r\n            setFeedbacksByRating([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n\r\n    const refetchGeneralFeedback = async () => {\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/feedbacks/\");\r\n            setGeneralFeedbacks(res.data.reverse());\r\n            setFeedbacksByRating([]);\r\n            setFeedbacksByDate([]);\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <Header />\r\n        <br />\r\n        <br />\r\n        <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            sx={classes.secondaryNav}\r\n        >\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                xs={12} sm={5} md={5} lg={5} xl={5}\r\n                sx={classes.showPublicFeedBacksContainer}\r\n            >\r\n                <Typography>\r\n                    Show Feedbacks to public\r\n                    <Switch />\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                xs={12} sm={4} md={4} lg={4} xl={4}\r\n                sx={classes.sortingContainer}\r\n            >\r\n                <Button\r\n                    id=\"basic-button\"\r\n                    aria-controls={open ? 'basic-menu' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                    endIcon={<KeyboardArrowDownIcon />}\r\n                    sx={{ borderRadius: \"0px\", background: \"#d9d9d9\", width: \"160px\", color: \"black\" }}\r\n                >\r\n                    <Typography >Sort By</Typography>\r\n                </Button>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={handelDateDisplay}>Sort By Date</MenuItem>\r\n                    <MenuItem onClick={handelRatingDisplay}>Sort By Rating</MenuItem>\r\n                    <MenuItem onClick={handelLatestFeedbackDisplay}>Latest</MenuItem>\r\n                </Menu>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        {/* Sorting Grid */}\r\n        <Grid\r\n            container\r\n            sx={classes.searchingContainer}\r\n            ref={searchingContainerRef}\r\n        >\r\n\r\n            {/* Date Picker container */}\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent={\"start\"}\r\n                alignItems={\"center\"}\r\n                xs={12} sm={12} md={12} lg={12} xl={12}\r\n                sx={classes.DatePickerGrid}\r\n            >\r\n                <Grid container direction=\"row\" justifyContent={\"center\"} alignItems={\"center\"} ref={sortByDate} sx={{ ...classes.datePicker }}>\r\n                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                        <TextField\r\n                            id=\"date\"\r\n                            label=\"Sort By Date\"\r\n                            type=\"date\"\r\n                            defaultValue={date}\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        // ref={sortByDate}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                        <Button onClick={() => getFeedbacksByDate()} variant=\"contained\" sx={classes.searchBtn}>\r\n                            search\r\n                        </Button>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n                {/* Rating Box */}\r\n                <Box ref={sortByRating} sx={{ ...classes.ratingBox }}>\r\n                    <Grid container flexDirection={\"row\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n                        <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Select Rating</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={rating}\r\n                                    label=\"Select Rating\"\r\n                                    onChange={(e) => setRating(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={0}>0 Star</MenuItem>\r\n                                    <MenuItem value={1}>1 Star</MenuItem>\r\n                                    <MenuItem value={2}>2 Star</MenuItem>\r\n                                    <MenuItem value={3}>3 Star</MenuItem>\r\n                                    <MenuItem value={4}>4 Star</MenuItem>\r\n                                    <MenuItem value={5}>5 Star</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {/* Search Button */}\r\n                        <Grid item xs={3} sm={3} md={3} lg={3} xl={3} >\r\n                            <Button onClick={() => getFeedbacksByRating()} variant=\"contained\" sx={classes.searchBtn}>\r\n                                search\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n\r\n                {/* latest Feedbacks search */}\r\n                <Box ref={sortBylatestFeedbacks} sx={{ ...classes.latestFeedbacks }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Day</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={day}\r\n                            label=\"Select day\"\r\n                            onChange={(e) => setDay(e.target.value)}\r\n                        >\r\n                            <MenuItem value={1}>1 day ago</MenuItem>\r\n                            <MenuItem value={2}>2 day ago</MenuItem>\r\n                            <MenuItem value={3}>3 day ago</MenuItem>\r\n                            <MenuItem value={4}>4 day ago</MenuItem>\r\n                            <MenuItem value={5}>5 day ago</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n\r\n                {/* Search Button */}\r\n                {/* <Button variant=\"contained\" sx={classes.searchBtn}>\r\n                    search\r\n                </Button> */}\r\n\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n            {\r\n                ((() => {\r\n                    if (generalFeedbacks.length !== 0) return <Typography variant=\"h4\" sx={classes.sortingHeading}>latest Feedbacks</Typography>\r\n                    if (feedbacksByDate.length !== 0) return <Typography variant=\"h4\" sx={classes.sortingHeading}>Sorted By Date</Typography>\r\n                    if (feedbacksByRating.length !== 0) return <Typography variant=\"h4\" sx={classes.sortingHeading}>Sorted By Rating</Typography>\r\n                })())\r\n            }\r\n        </Grid>\r\n\r\n        {/* USER FEEDBACKS */}\r\n        <Grid container >\r\n\r\n            {/* <Grid\r\n                item\r\n                sx={{ border: \"5px solid green\" }}\r\n                xs={0.5} sm={0.5} md={0.5} lg={0.5} xl={0.5}\r\n            /> */}\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                flexDirection={\"row\"}\r\n                xs={12} sm={12} md={12} lg={12} xl={12}\r\n            // style={{ border: \"5px solid green\" }}\r\n            >\r\n\r\n                {\r\n                    generalFeedbacks?.map((val, index) => {\r\n                        return (\r\n                            <Grid\r\n                                key={index}\r\n                                item\r\n                                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                                // sx={{ mt: 0, ml: \"2%\", mb: 0, mr: 0 }}\r\n                                sx={{ ml: \"2%\" }}\r\n                            >\r\n                                <FeedbacksCard\r\n                                    refetchData={refetchGeneralFeedback}\r\n                                    // refetchData={(refetchGeneralFeedback,refetchFeedbacksByDate,refetchFeedbacksByRating) => {\r\n                                    //     if (generalFeedbacks.length !== 0) return refetchGeneralFeedback\r\n                                    //     if (feedbacksByDate.length !== 0) return refetchFeedbacksByDate\r\n                                    //     if (feedbacksByRating.length !== 0) return refetchFeedbacksByRating\r\n                                    // }}\r\n                                    cardData={val}\r\n                                />\r\n                            </Grid>\r\n                        );\r\n                    })\r\n                }\r\n                {\r\n                    feedbacksByDate?.map((val, index) => {\r\n                        return (\r\n                            <Grid\r\n                                key={index}\r\n                                item\r\n                                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                                // sx={{ mt: 0, ml: \"2%\", mb: 0, mr: 0 }}\r\n                                sx={{ ml: \"2%\" }}\r\n                            >\r\n                                <FeedbacksCard\r\n                                    refetchData={refetchFeedbacksByDate}\r\n                                    // refetchData={(refetchGeneralFeedback,refetchFeedbacksByDate,refetchFeedbacksByRating) => {\r\n                                    //     if (generalFeedbacks.length !== 0) return refetchGeneralFeedback\r\n                                    //     if (feedbacksByDate.length !== 0) return refetchFeedbacksByDate\r\n                                    //     if (feedbacksByRating.length !== 0) return refetchFeedbacksByRating\r\n                                    // }}\r\n                                    cardData={val}\r\n                                />\r\n                            </Grid>\r\n                        );\r\n                    })\r\n                }\r\n                {\r\n                    feedbacksByRating?.map((val, index) => {\r\n                        return (\r\n                            <Grid\r\n                                key={index}\r\n                                item\r\n                                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                                // sx={{ mt: 0, ml: \"2%\", mb: 0, mr: 0 }}\r\n                                sx={{ ml: \"2%\" }}\r\n                            >\r\n                                <FeedbacksCard\r\n                                refetchData={refetchFeedbacksByRating}\r\n                                    // refetchData={(refetchGeneralFeedback, refetchFeedbacksByDate, refetchFeedbacksByRating) => {\r\n                                    //     if (generalFeedbacks.length !== 0) return refetchGeneralFeedback\r\n                                    //     if (feedbacksByDate.length !== 0) return refetchFeedbacksByDate\r\n                                    //     if (feedbacksByRating.length !== 0) return refetchFeedbacksByRating\r\n                                    // }}\r\n                                    cardData={val}\r\n                                />\r\n                            </Grid>\r\n                        );\r\n                    })\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n    </>);\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    secondaryNav: {\r\n        // height: \"50px\",\r\n        background: \"#f2f2f2\"\r\n    },\r\n    showPublicFeedBacksContainer: {\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            paddingLeft: \"20px\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }\r\n\r\n    },\r\n    sortingContainer: {\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            paddingLeft: \"20px\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }\r\n    },\r\n    searchingContainer: {\r\n        background: \"#f2f2f2\",\r\n        marginTop: \"15px\",\r\n        paddingTop: \"15px\",\r\n        paddingBottom: \"15px\",\r\n        display: \"none\",\r\n    },\r\n    searchBtn: {\r\n        height: \"50px\",\r\n        marginLeft: \"2%\",\r\n        [theme.breakpoints.only(\"xs\")]: { marginTop: \"5px\" }\r\n    },\r\n    DatePickerGrid: {\r\n        marginLeft: \"5%\",\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"start\"\r\n        },\r\n    },\r\n    datePicker: {\r\n        width: { xs: \"80%\", sm: \"30%\" },\r\n        display: \"none\",\r\n    },\r\n    ratingBox: {\r\n        width: { xs: \"40%\", sm: \"30%\" },\r\n        display: \"none\"\r\n    },\r\n    latestFeedbacks: {\r\n        width: { xs: \"45%\", sm: \"30%\" },\r\n        display: \"none\"\r\n    },\r\n    ratingSelect: {\r\n        \"& .MuiSelect-select:hover\": { border: \"none\" }\r\n    },\r\n    sortingHeading: {\r\n        ml: \"3%\",\r\n        mt: 4\r\n    }\r\n\r\n});\r\n\r\nexport default AdminFeedbacksPage;","import React, {useState, useEffect} from \"react\";\r\nimport { Grid, Typography, Button, Divider } from \"@mui/material\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport Header from \".././components/header.Component\"\r\nimport EditProfileModal from \"../components/modal/editProfileModal.Component\"\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\nconst AdminProfilePage = () => {\r\n\r\n    const [displayUser, setDisplayUser] = useState();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    const isXS = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n    const user = JSON.parse(localStorage.getItem(\"user\")) ;\r\n\r\n\r\n    useEffect(async () => {\r\n        if (!user){\r\n            history.push(\"/\")\r\n        }\r\n        \r\n        if (user.role !== \"admin\") {\r\n            history.push(\"/\")\r\n        }\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`${apiUrl}/api/user/${user._id}`);\r\n            setDisplayUser(res.data);\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }, [])\r\n\r\n    const refetchUser= async()=>{\r\n        try {\r\n            const res = await axios.get(`${apiUrl}/api/user/${user._id}`);\r\n            setDisplayUser(res.data);\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <Header />\r\n        <br />\r\n        <br />\r\n        <Grid container justifyContent=\"center\" >\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n               xs={7} sm={5} md={3} lg={3} xl={3}\r\n            >\r\n                <img src=\"/assets/userImage.jpg\" width=\"60%\" style={classes.userImage} />\r\n            </Grid>\r\n\r\n            <Grid item sm={2} md={1} lg={1} xl={1} sx={{display: isXS? \"none\": \"block\"}}>\r\n                <Divider orientation=\"vertical\" sx={classes.divider}>\r\n                    Details\r\n                </Divider>\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                xs={10} sm={5} md={5} lg={5} xl={5}\r\n                sx={classes.userDetailsMainContainer}\r\n            >\r\n\r\n<Grid item container direction=\"row\" sx={classes.useerDetailsGrid}>\r\n                    <Typography variant=\"body1\" >First Name:</Typography>\r\n                    <Typography variant=\"body1\" sx={classes.userDetailsGeneral} >{displayUser?.userName}</Typography>\r\n                </Grid>\r\n\r\n                <Grid item container direction=\"row\" sx={classes.useerDetailsGrid} >\r\n                    <Typography variant=\"body1\" >Phone:</Typography>\r\n                    <Typography variant=\"body1\" sx={classes.userDetailsGeneral}>{displayUser?.phone1}</Typography>\r\n                </Grid>\r\n\r\n                <Grid item container direction=\"row\" sx={classes.useerDetailsGrid}>\r\n                    <Typography variant=\"body1\" >Email:</Typography>\r\n                    <Typography variant=\"body1\" sx={classes.userDetailsGeneral}>{displayUser?.email}</Typography>\r\n                </Grid>\r\n\r\n                <Grid item container direction=\"row\" sx={classes.useerDetailsGrid}>\r\n                    {/* <Button variant=\"contained\"  sx={{ background: \"#4d79ff\" }}>\r\n                        <Typography variant=\"caption\">\r\n                            Change\r\n                        </Typography>\r\n                    </Button> */}\r\n                    <EditProfileModal refetchUser={refetchUser} userData={displayUser} />\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    </>);\r\n};\r\n\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        userImage: {\r\n            borderRadius: \"50%\",\r\n            border: \"10px solid #4d79ff\",\r\n            padding: \"3px\"\r\n        },\r\n        divider: {\r\n            \"& .MuiDivider-wrapper\": { color: \"#737373\" },\r\n            \"&.MuiDivider-root:before\": { borderColor: \"#B8B8B8\" },\r\n            \"&.MuiDivider-root:after\": { borderColor: \"#B8B8B8\" },\r\n        },\r\n        userDetailsGeneral: {\r\n            marginLeft: \"15px\"\r\n        },\r\n        useerDetailsGrid: {\r\n            marginY: \"10px\"\r\n        },\r\n        userDetailsMainContainer:{\r\n            [theme.breakpoints.only(\"xs\")]:{\r\n                marginTop:\"20px\"\r\n            }\r\n        },\r\n        \r\n    });\r\n};\r\n\r\n\r\nexport default AdminProfilePage;","import React, { useState } from \"react\"\r\nimport { Grid, Typography, TextField, Button } from \"@mui/material\"\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\n\r\nconst QuestionCardComponent = ({ cardvalue }) => {\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [question, setQuestion] = useState()\r\n    const history = useHistory();\r\n\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    const isXS = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`${apiUrl}/api/questions/${id}`)\r\n            cogoToast.success(<h4>{res.data.successMsg}</h4>);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n\r\n            if (err.response.status == 401) {\r\n                localStorage.removeItem(\"user\");\r\n                history.push(\"/\")\r\n                cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n            }\r\n            cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n        }\r\n    }\r\n\r\n\r\n    const onUpdate = async (id) => {\r\n        try {\r\n            const body = {question};\r\n            const res = await axios.patch(`${apiUrl}/api/questions/${id}`, body)\r\n            cogoToast.success(<h4>{res.data.successMsg}</h4>);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n\r\n            if (err.response.status == 401) {\r\n                localStorage.removeItem(\"user\");\r\n                history.push(\"/\")\r\n                cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n            }\r\n            cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <Grid container sx={classes.container}>\r\n\r\n            {\r\n                isEdit ?\r\n                    (<>\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                            <TextField \r\n                            type={\"text\"} \r\n                            defaultValue={cardvalue?.question}  \r\n                            fullWidth\r\n                            onChange={(e)=>setQuestion(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </>) :\r\n                    (<>\r\n                        <Grid item>\r\n                            <Typography >{cardvalue?.question}</Typography>\r\n                        </Grid>\r\n\r\n                    </>)\r\n            }\r\n\r\n            <Grid item container>\r\n                {\r\n                   !isEdit?\r\n                    <Button onClick={() => setIsEdit(true)} variant=\"contained\" sx={{ ...classes.editBtn }}>Edit</Button>\r\n                    :\r\n                    (<>\r\n                    <Button onClick={() => onUpdate(cardvalue?._id)} variant=\"contained\" sx={{ ...classes.editBtn }}>Update</Button>\r\n                    <Button onClick={() => setIsEdit(false)} variant=\"contained\" sx={{ ...classes.editBtn }}>Cancel</Button>\r\n                    </>)\r\n                }\r\n                <Button onClick={() => onDelete(cardvalue?._id)} sx={{ ...classes.deleteBtn }}>Delete</Button>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </>);\r\n};\r\n\r\nconst styles = () => {\r\n    return ({\r\n        container: {\r\n            border: \"3px solid #4d79ff\",\r\n            p: \"20px\",\r\n            borderRadius: \"30px\",\r\n            mb: { xs: \"10px\", sm: \"15px\", md: \"15px\", lg: \"15px\", xl: \"15px\" }\r\n        },\r\n        deleteBtn: {\r\n            background: \"#ff3333\",\r\n            padding: \"2px\",\r\n            color: \"white\",\r\n            margin: \"10px\",\r\n            marginLeft: \"0px\",\r\n            border: \"2px solid #ff3333\",\r\n            \"&:hover\": { border: \"2px solid white\", color: \"red\" }\r\n        },\r\n        editBtn: {\r\n            // background: \"white\",\r\n            padding: \"2px\",\r\n            // border: \" 2px solid lightblue\",\r\n            margin: \"10px\",\r\n            marginLeft: \"0px\",\r\n            \"&:hover\": {\r\n                color: \"white\",\r\n            }\r\n        },\r\n    })\r\n};\r\nexport default QuestionCardComponent;","import React, { useState, useEffect } from \"react\"\r\nimport { Grid, Typography, TextField, Button } from \"@mui/material\"\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport QuestionCardComponent from \"../components/questionCard.Component\"\r\nimport Header from \"../components/header.Component\"\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\nconst AdminQuestionsPage = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [question, setQuestion] = useState();\r\n    const history = useHistory();\r\n\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n    const isXS = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n\r\n    useEffect(async () => {\r\n        const res = await axios.get(apiUrl+\"/api/questions/\");\r\n        setQuestions(res.data);\r\n    }, [questions]);\r\n\r\n    const addQuestion = async () => {\r\n        try {\r\n            const body= {question}\r\n            const res = await axios.post(`${apiUrl}/api/questions/`, body)\r\n            cogoToast.success(<h4>{res.data.successMsg}</h4>);\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n\r\n            if (err.response.status == 401) {\r\n                localStorage.removeItem(\"user\");\r\n                history.push(\"/\")\r\n                cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n            }\r\n            cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <Header />\r\n        <Grid container justifyContent={\"end\"} sx={classes.addContainer}>\r\n\r\n            <Grid item sx={classes.addHeading} xs={11.5} sm={11.5} md={11.5} lg={11.5} xl={11.5}>\r\n                <Typography variant=\"body1\">Add a question</Typography>\r\n            </Grid>\r\n\r\n            <Grid item container direction={isXS ? \"column\" : \"row\"} alignItems={isXS ? \"start\" : \"\"} xs={11.5} sm={11.5} md={11.5} lg={11.5} xl={11.5}>\r\n                <TextField onChange={(e)=> setQuestion(e.target.value) } type=\"text\" multiline rows={isXS ? 4 : 1} sx={classes.addTextField} size=\"small\" label=\"Add question\" variant=\"outlined\" />\r\n                <Button onClick={()=> addQuestion() } variant=\"contained\" size=\"medium\" sx={classes.addBtn}>Add</Button>\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid container sx={classes.questionsContainer}>\r\n\r\n            <Grid item xs={0.5} sm={0.5} md={0.5} lg={0.5} xl={0.5} />\r\n\r\n            <Grid item xs={11} sm={8} md={8} lg={8} xl={8}>\r\n\r\n                {\r\n                    questions?.map((val) => {\r\n                        return (\r\n                            <QuestionCardComponent cardvalue={val} />\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </>);\r\n};\r\n\r\nconst styles = () => {\r\n    return ({\r\n        addContainer: {\r\n            mt: { xs: \"20px\", sm: 5, md: 5, lg: 5, xl: 5 }\r\n        },\r\n        addBtn: {\r\n            ml: \"0.5%\",\r\n            mt: { xs: \"5px\", sm: 0, md: 0, lg: 0, xl: 0 }\r\n        },\r\n        addHeading: {\r\n            mb: { xs: \"8px\", sm: \"15px\", md: \"15px\", lg: \"15px\", xl: \"15px\" }\r\n        },\r\n        addTextField: {\r\n            width: { xs: \"70%\", sm: \"50%\", md: \"50%\", lg: \"50%\", xl: \"50%\" }\r\n        },\r\n        questionsContainer: {\r\n            mt: { xs: 5, sm: 7, md: 7, lg: 7, xl: 7 }\r\n        }\r\n    })\r\n};\r\nexport default AdminQuestionsPage;","import React from \"react\"\r\nimport { Grid, Typography } from \"@mui/material\"\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport Rating from '@mui/material/Rating';\r\n\r\n\r\nconst PublicFeedbackCard = ({cardValue}) => {\r\n    console.log(cardValue)\r\n    const theme = useTheme();\r\n    const isWidth340 = useMediaQuery(\"(max-width:340px)\");\r\n    const isWidth400 = useMediaQuery(\"(max-width:400px)\");\r\n    const windowheight = window.innerHeight;\r\n    const classes = styles(theme, windowheight);\r\n\r\n    const userName = cardValue?.userId.userName;\r\n    const value = cardValue?.averageRating;\r\n    const feedback = cardValue?.userFeedback ;\r\n    const date = cardValue?.date\r\n    return (\r\n        <>\r\n            <Grid container sx={classes.mainContainer}>\r\n\r\n                <Grid\r\n                    item\r\n                    container\r\n                    justifyContent={\"center\"}\r\n                    alignItems={\"center\"}\r\n                    xs={3} sm={2} md={2} lg={2} xl={2}\r\n                >\r\n                    <img src=\"/assets/userImage.jpg\" width=\"70%\" style={classes.image} />\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={isWidth340 ? 9 : 7} sm={5} md={6} lg={4} xl={4}\r\n                >\r\n                    <Rating\r\n                        readOnly\r\n                        size={isWidth400 ? \"small\" : \"large\"}\r\n                        sx={classes.rating}\r\n                        value={value}\r\n                    />\r\n                    <Typography variant=\"subtitle1\" sx={{ fontWeight: \"bold\" }}>@{userName}</Typography>\r\n                    <Typography variant=\"subtitle1\" fontSize={\"small\"} > date: {date}</Typography>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    sx={{ mt: 2 }}\r\n                    xs={11} sm={11} md={11} lg={11} xl={11}\r\n                >\r\n                    <Typography variant=\"subtitle1\">\r\n                        {feedback}\r\n                    </Typography>\r\n                </Grid>\r\n\r\n\r\n\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = (theme, windowheight) => {\r\n    return ({\r\n        mainContainer: {\r\n            background: \"white\",\r\n            p: 2,\r\n            boxShadow: \"1px 0px 10px 1px rgba(0,0,0,0.30)\",\r\n            mb: 4\r\n        },\r\n        image: {\r\n            borderRadius: \"50%\",\r\n            border: \"2px solid #4d79ff\",\r\n            padding: \"1px\"\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\nexport default PublicFeedbackCard;","import React , {useEffect, useState}from \"react\"\r\nimport { Grid, Typography } from \"@mui/material\"\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport PublicFeedbackCard from \"../components/publicFeedbackCard.Component\"\r\nimport axios from \"axios\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\nconst PublicFeedbacksPage = () => {\r\n    const [generalFeedbacks, setGeneralFeedbacks] = useState([]);\r\n    const theme = useTheme();\r\n    const isWidth350 = useMediaQuery(\"(max-width:350px)\");\r\n    const windowheight = window.innerHeight;\r\n    const classes = styles(theme, windowheight);\r\n\r\n\r\n    useEffect(async () => {\r\n        const res = await axios.get(apiUrl+\"/api/feedbacks/\");\r\n        setGeneralFeedbacks(res.data.reverse());\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container sx={classes.mainContainer}>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={11} sm={11} md={11} lg={11} xl={11}\r\n                    sx={classes.heading}\r\n                >\r\n                    <Typography variant=\"h4\">\r\n                        Public Reviews on ABC... Company\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                {\r\n                    generalFeedbacks?.map((val, index) => {\r\n                        return (\r\n                            <>\r\n                                <Grid\r\n                                    key={index}\r\n                                    item\r\n                                    xs={11.5} sm={11} md={5.5} lg={5.5} xl={5.5}\r\n                                    sx={{ ml: \"2%\" }}\r\n                                >\r\n                                    <PublicFeedbackCard cardValue={val}/>\r\n                                </Grid>\r\n                            </>\r\n                        );\r\n                    })\r\n                }\r\n\r\n\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = (theme, windowheight) => {\r\n    return ({\r\n        mainContainer: {\r\n            background: \"#e6e6e6\",\r\n        },\r\n        heading: {\r\n            p: \"4%\",\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\nexport default PublicFeedbacksPage;","import react, { useEffect, useState } from \"react\";\r\nimport { Grid, Typography, Button, TextField } from \"@mui/material\";\r\nimport Divider from '@mui/material/Divider';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Header from \"../components/header.Component.js\"\r\nimport StarRatingComponent from \"../components/starRating.Component.js\";\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\nconst GuestFeedBackPage = (props) => {\r\n    const [first, setFirst] = useState(0);\r\n    const [second, setSecond] = useState(0);\r\n    const [third, setThird] = useState(0);\r\n    const [fourth, setfourth] = useState(0);\r\n    const [fifth, setFifth] = useState(0);\r\n    const [sixth, setSixth] = useState(0);\r\n    const [seventh, setSeventh] = useState(0);\r\n    const [eigth, setEigth] = useState(0);\r\n    const [nineth, setNineth] = useState(0);\r\n    const [tenth, setTenth] = useState(0);\r\n    const [avgRating, setAvgRating] = useState();\r\n    const [userFeedback, setUserFeedback] = useState();\r\n    const [userName, setUserName] = useState();\r\n    const [phone1, setPhone1] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [questions, setQuestions] = useState([]);\r\n    const theme = useTheme();\r\n    const classes = styles(theme);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/questions/\");\r\n            setQuestions(res.data)\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const onsubmit = async () => {\r\n        const first1 = first ? first : 0\r\n        const second1 = second ? second : 0\r\n        const third1 = third ? third : 0\r\n        const fourth1 = fourth ? fourth : 0\r\n        const fifth1 = fifth ? fifth : 0\r\n        const sixth1 = sixth ? sixth : 0\r\n        const seventh1 = seventh ? seventh : 0\r\n        const eigth1 = eigth ? eigth : 0\r\n        const nineth1 = nineth ? nineth : 0\r\n        const tenth1 = tenth ? tenth : 0\r\n        const avg = (first1 + second1 + third1 + fourth1 + fifth1 + sixth1 + seventh1 + eigth1 + nineth1 + tenth1) / questions.length;\r\n        const averageRating = Math.ceil(avg);\r\n        const body = { userFeedback, averageRating, phone1, email, userName }\r\n        if(body.userFeedback == undefined || body.userFeedback == null){\r\n            cogoToast.error(\"Kindly provide Feedback\");\r\n            return null;\r\n        }\r\n        if(body.userName == undefined || body.userName == null){\r\n            cogoToast.error(\"Kindly provide Name\");\r\n            return null;\r\n        }\r\n        if(body.email == undefined || body.email == null){\r\n            cogoToast.error(\"Kindly provide Email\");\r\n            return null;\r\n        }\r\n        if(body.phone1 == undefined || body.phone1 == null){\r\n            cogoToast.error(\"Kindly provide Phone#\");\r\n            return null;\r\n        }\r\n        try {\r\n            const res = await axios.post(`${apiUrl}/api/guestFeedbacks/`, body)\r\n            cogoToast.success(\r\n                <div>\r\n                    <center>\r\n                    <h3>Thank you For your Feedback</h3>\r\n                    <h4>Get yourself Register to show your feedback to public and get points</h4>\r\n                    </center>\r\n                </div>,\r\n                { hideAfter: 5 });\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n            cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <Header />\r\n        <br />\r\n        <Grid container justifyContent=\"space-evenly\">\r\n\r\n            <Grid\r\n                item\r\n                xs={11} sm={11} md={5.5} lg={5} xl={5}\r\n            >\r\n                {\r\n                    questions[0] ?\r\n                        <StarRatingComponent setRating={setFirst} question={questions[0]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[1] ?\r\n                        <StarRatingComponent setRating={setSecond} question={questions[1]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[2] ?\r\n                        <StarRatingComponent setRating={setThird} question={questions[2]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[3] ?\r\n                        <StarRatingComponent setRating={setfourth} question={questions[3]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[4] ?\r\n                        <StarRatingComponent setRating={setFifth} question={questions[4]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[5] ?\r\n                        <StarRatingComponent setRating={setSixth} question={questions[5]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[6] ?\r\n                        <StarRatingComponent setRating={setSeventh} question={questions[6]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[7] ?\r\n                        <StarRatingComponent setRating={setEigth} question={questions[7]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[8] ?\r\n                        <StarRatingComponent setRating={setNineth} question={questions[8]?.question} />\r\n                        : null\r\n                }\r\n                {\r\n                    questions[9] ?\r\n                        <StarRatingComponent setRating={setTenth} question={questions[9]?.question} />\r\n                        : null\r\n                }\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                xs={11} sm={11} md={5.5} lg={5} xl={5}\r\n                sx={classes.textFieldGrid}\r\n            >\r\n                <Typography variant=\"h6\">\r\n                    Share your feedback\r\n                </Typography>\r\n\r\n                <TextField\r\n                    label=\"Feedback\"\r\n                    fullWidth\r\n                    type={\"text\"}\r\n                    multiline\r\n                    rows={10}\r\n                    placeholder=\"write here...\"\r\n                    sx={{ ...classes.xSpacing15, background: \"#f2f2f2\" }}\r\n                    onChange={(e) => setUserFeedback(e.target.value)}\r\n                />\r\n                <Typography variant=\"h6\">\r\n                    Share your Details\r\n                </Typography>\r\n\r\n                <TextField\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    placeholder=\"write here...\"\r\n                    sx={{ ...classes.xSpacing15, background: \"#f2f2f2\" }}\r\n                    fullWidth\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n\r\n                />\r\n\r\n                <TextField\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    placeholder=\"write here...\"\r\n                    sx={{ ...classes.xSpacing15, background: \"#f2f2f2\" }}\r\n                    fullWidth\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n\r\n                />\r\n\r\n                <TextField\r\n                    label=\"Phone\"\r\n                    type=\"text\"\r\n                    placeholder=\"write here...\"\r\n                    sx={{ ...classes.xSpacing15, background: \"#f2f2f2\" }}\r\n                    fullWidth\r\n                    onChange={(e) => setPhone1(e.target.value)}\r\n\r\n                />\r\n                <Button variant=\"contained\" onClick={() => onsubmit()}>Submit</Button>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </>)\r\n};\r\n\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        dividerGeneral: {\r\n            margin: \"10px\", \"&.MuiDivider-root\": { borderColor: \"#c3c3c3\" }\r\n        },\r\n        textFieldGrid: {\r\n            [theme.breakpoints.down(\"md\")]: { marginTop: '50px' }\r\n        },\r\n        xSpacing15: {\r\n            marginTop: \"15px\",\r\n            marginBottom: \"15px\"\r\n        }\r\n    });\r\n};\r\n\r\nexport default GuestFeedBackPage;","import { Grid, Typography, Button, TextField } from \"@mui/material\";\r\nimport Divider from '@mui/material/Divider';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport cogoToast from 'cogo-toast';\r\nimport { useState } from \"react\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\n\r\n\r\nconst GuestFeedbackCard = ({ cardData, refetchData }) => {\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [userFeedback, setUserFeedback] = useState()\r\n    // console.log(typeof reFetch)\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const isWidth400px = useMediaQuery(\"(max-width:400px)\");\r\n    const classes = styles(theme);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n\r\n    const date = cardData?.date + \"  |  \" + cardData?.time;\r\n    const rating = cardData?.averageRating;\r\n    const feedback = cardData?.userFeedback;\r\n    const userName = cardData?.userName;\r\n    const userEmail = cardData?.email;\r\n    const userPhone = cardData?.phone1;\r\n    const role = user.role;\r\n\r\n\r\n    const onDelete = async () => {\r\n        try {\r\n            const res = await axios.delete(`${apiUrl}/api/guestFeedbacks/${cardData?._id}`)\r\n            cogoToast.success(<h4>{res?.data?.successMsg}</h4>);\r\n            refetchData();\r\n\r\n        } catch (err) {\r\n            console.log(err?.response);\r\n\r\n            if (err?.response?.status == 401) {\r\n                localStorage.removeItem(\"user\");\r\n                history.push(\"/\")\r\n                cogoToast.error(<h4>{err?.response?.data?.errorMsg}</h4>);\r\n            }\r\n            cogoToast.error(<h4>{err?.response?.data?.errorMsg}</h4>);\r\n        }\r\n    }\r\n\r\n\r\n    const onEdit = async () => {\r\n        try {\r\n            const body = { userFeedback }\r\n            const res = await axios.patch(`${apiUrl}/api/guestFeedbacks/${cardData?._id}`, body)\r\n            cogoToast.success(<h4>{res?.data?.successMsg}</h4>);\r\n            refetchData();\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            console.log(err?.response);\r\n\r\n            if (err?.response?.status == 401) {\r\n                localStorage.removeItem(\"user\");\r\n                history.push(\"/\")\r\n                cogoToast.error(<h4>{err.response.data.errorMsg}</h4>);\r\n            }\r\n            cogoToast.error(<h4>{err.response?.data?.errorMsg}</h4>);\r\n        }\r\n    }\r\n\r\n\r\n    return (<>\r\n        <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            sx={classes.conatiner}\r\n        >\r\n\r\n            {/* Date/rating container */}\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"start\"\r\n                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                sx={{ ...classes.date_RatingContainer }}\r\n            >\r\n                <Typography color=\"white\" variant=\"subtitle1\">\r\n                    Date: {date}\r\n                </Typography>\r\n\r\n                <Typography color=\"white\" variant=\"subtitle1\" sx={{ marginLeft: \"3%\" }}>\r\n                    Rating: {rating}/5\r\n                </Typography>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n            {/* divider */}\r\n            <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n                <Divider sx={{ ...classes.dividerGeneral }} />\r\n            </Grid>\r\n\r\n            {/* user-name container */}\r\n            {\r\n                role == \"admin\" ? (<>\r\n\r\n                    <Grid item container xs={11} sm={11} md={11} lg={11} xl={11}>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" sx={{ fontWeight: \"bold\", mb: 1, fontSize: \"18px\" }} >\r\n                            Name: {userName} &nbsp;&nbsp; | &nbsp;&nbsp;\r\n                        </Typography>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" sx={{ fontWeight: \"bold\", mb: 1, fontSize: \"18px\" }} >\r\n                            Email: {userEmail} &nbsp;&nbsp; | &nbsp;&nbsp;\r\n                        </Typography>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" sx={{ fontWeight: \"bold\", mb: 1, fontSize: \"18px\" }} >\r\n                            Phone {userPhone}\r\n                        </Typography>\r\n                    </Grid>\r\n                </>) : null\r\n            }\r\n\r\n            {/* Feedback container */}\r\n            {\r\n                isEdit ? (<>\r\n                    <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n\r\n                        <TextField\r\n                            type={\"text\"}\r\n                            multiline\r\n                            defaultValue={feedback}\r\n                            fullWidth\r\n                            onChange={(e) => setUserFeedback(e.target.value)}\r\n                            sx={{ border: \"2px solid white\", borderRadius: \"5px\", background: \"white\" }}\r\n                        />\r\n                    </Grid>\r\n\r\n                </>) : (<>\r\n\r\n                    <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n                        <Typography color=\"white\" variant=\"subtitle1\" >\r\n                            {feedback}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </>)\r\n            }\r\n\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                sx={classes.btnsGrid}\r\n                justifyContent={isWidth400px ? \"center\" : null}\r\n            >\r\n\r\n                {/* checking user role  */}\r\n                {role == \"user\" ? (\r\n                    null\r\n                    // <Button onClick={()=> onDelete(cardData?._id) } sx={{ ...classes.deleteBtn }}>\r\n                    //     Delete\r\n                    // </Button>\r\n                ) : (<>\r\n\r\n\r\n                    {/* edit options */}\r\n                    {\r\n                        isEdit ? (<>\r\n                            <Button onClick={onEdit} sx={{ ...classes.editBtn }}>\r\n                                Save\r\n                            </Button>\r\n                            <Button onClick={() => setIsEdit(false)} sx={{ ...classes.editBtn }}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                        </>) :\r\n                            (<>\r\n                                <Button onClick={() => setIsEdit(true)} sx={{ ...classes.editBtn }}>\r\n                                    Edit\r\n                                </Button>\r\n                            </>)\r\n\r\n                    }\r\n\r\n                    <Button onClick={() => onDelete()} sx={{ ...classes.deleteBtn }}>\r\n                        Delete\r\n                    </Button>\r\n\r\n\r\n\r\n                </>)}\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </>);\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    conatiner: {\r\n        background: \"#4d79ff\",\r\n        borderRadius: \"10px\",\r\n        marginTop: \"25px\",\r\n        pb: 1.5\r\n    },\r\n    date_RatingContainer: {\r\n        marginTop: \"8px\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    dividerGeneral: {\r\n        margin: \"5px\",\r\n        marginBottom: \"10px\",\r\n        \"&.MuiDivider-root\": { borderColor: \"white\" },\r\n    },\r\n    editBtn: {\r\n        background: \"white\",\r\n        padding: \"2px\",\r\n        border: \" 2px solid white\",\r\n        margin: \"10px\",\r\n        marginLeft: \"0px\",\r\n        \"&:hover\": {\r\n            color: \"white\",\r\n        }\r\n    },\r\n    deleteBtn: {\r\n        background: \"#ff3333\",\r\n        padding: \"2px\",\r\n        color: \"white\",\r\n        margin: \"10px\",\r\n        marginLeft: \"0px\",\r\n        border: \"2px solid #ff3333\",\r\n        \"&:hover\": { border: \"2px solid white\" }\r\n    },\r\n    btnsGrid: {\r\n        // [theme.breakpoints.only(\"xs\")]: {\r\n        //     display:\"flex\",\r\n        //     justifyContent:\"center\",\r\n        //     alignItems:\"center\",\r\n        //     margin:\"15px\"\r\n        // }\r\n    }\r\n});\r\n\r\nexport default GuestFeedbackCard;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport Switch from '@mui/material/Switch';\r\nimport Header from \"../components/header.Component\"\r\nimport { useTheme } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport GuestFeedbackCard from \"../components/guestFeedbackCard.Component\"\r\nimport axios from \"axios\";\r\nimport apiUrl from \"../config/apiUrl\"\r\n\r\n\r\n\r\nconst AdminGuestFeedbacksPage = () => {\r\n    const [generalFeedbacks, setGeneralFeedbacks] = useState([]);\r\n    const [rating, setRating] = React.useState();\r\n    const [date, setDate] = React.useState();\r\n    const [feedbacksByDate, setFeedbacksByDate] = React.useState([]);\r\n    const [feedbacksByRating, setFeedbacksByRating] = React.useState([]);\r\n\r\n    const theme = useTheme();\r\n    const sortBylatestFeedbacks = useRef();\r\n    const sortByDate = useRef();\r\n    const sortByRating = useRef();\r\n    const searchingContainerRef = useRef();\r\n    const classes = styles(theme);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n\r\n    const [day, setDay] = React.useState();\r\n    console.log(date)\r\n    console.log(rating)\r\n    console.log(day);\r\n\r\n    // sorting dropdown\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // sorting handlers\r\n    const handelDateDisplay = () => {\r\n        searchingContainerRef.current.style.display = \"block\"\r\n        sortByDate.current.style.display = \"block\"\r\n        sortByRating.current.style.display = \"none\"\r\n        sortBylatestFeedbacks.current.style.display = \"none\"\r\n    };\r\n    const handelRatingDisplay = () => {\r\n        searchingContainerRef.current.style.display = \"block\"\r\n        sortByRating.current.style.display = \"block\"\r\n        sortByDate.current.style.display = \"none\"\r\n        sortBylatestFeedbacks.current.style.display = \"none\"\r\n    };\r\n    const handelLatestFeedbackDisplay = async () => {\r\n        searchingContainerRef.current.style.display = \"none\"\r\n        sortBylatestFeedbacks.current.style.display = \"none\"\r\n        sortByRating.current.style.display = \"none\"\r\n        sortByDate.current.style.display = \"none\"\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/guestFeedbacks/\");\r\n            setGeneralFeedbacks(res.data.reverse());\r\n            setFeedbacksByRating([]);\r\n            setFeedbacksByDate([]);\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/guestFeedbacks/\");\r\n            setGeneralFeedbacks(res.data.reverse());\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const getFeedbacksByDate = async () => {\r\n        try {\r\n            const body = { date }\r\n            const res = await axios.post(apiUrl+\"/api/guestFeedbacks/feedbacksByDate\", body)\r\n            setFeedbacksByDate(res.data.reverse());\r\n            setGeneralFeedbacks([]);\r\n            setFeedbacksByRating([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n    const getFeedbacksByRating = async () => {\r\n        try {\r\n            const body = { rating }\r\n            const res = await axios.post(apiUrl+\"/api/guestFeedbacks/feedbacksByRating\", body)\r\n            setFeedbacksByRating(res.data.reverse());\r\n            setFeedbacksByDate([]);\r\n            setGeneralFeedbacks([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // REFETCH DATA FROM API\r\n\r\n    const refetchFeedbacksByRating = async () => {\r\n        try {\r\n            const body = { rating }\r\n            const res = await axios.post(apiUrl+\"/api/guestFeedbacks/feedbacksByRating\", body)\r\n            setFeedbacksByRating(res.data.reverse());\r\n            setFeedbacksByDate([]);\r\n            setGeneralFeedbacks([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n\r\n    const refetchFeedbacksByDate = async () => {\r\n        try {\r\n            const body = { date }\r\n            const res = await axios.post(apiUrl+\"/api/guestFeedbacks/feedbacksByDate\", body)\r\n            setFeedbacksByDate(res.data.reverse());\r\n            setGeneralFeedbacks([]);\r\n            setFeedbacksByRating([]);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n        }\r\n    }\r\n\r\n\r\n    const refetchGeneralFeedback = async () => {\r\n        try {\r\n            const res = await axios.get(apiUrl+\"/api/guestFeedbacks/\");\r\n            setGeneralFeedbacks(res.data.reverse());\r\n            setFeedbacksByRating([]);\r\n            setFeedbacksByDate([]);\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <Header />\r\n        <br />\r\n        <br />\r\n        <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            sx={classes.secondaryNav}\r\n        >\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                xs={12} sm={5} md={5} lg={5} xl={5}\r\n                sx={classes.showPublicFeedBacksContainer}\r\n            >\r\n                <Typography>\r\n                    Show Feedbacks to public\r\n                    <Switch />\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                xs={12} sm={4} md={4} lg={4} xl={4}\r\n                sx={classes.sortingContainer}\r\n            >\r\n                <Button\r\n                    id=\"basic-button\"\r\n                    aria-controls={open ? 'basic-menu' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                    endIcon={<KeyboardArrowDownIcon />}\r\n                    sx={{ borderRadius: \"0px\", background: \"#d9d9d9\", width: \"160px\", color: \"black\" }}\r\n                >\r\n                    <Typography >Sort By</Typography>\r\n                </Button>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={handelDateDisplay}>Sort By Date</MenuItem>\r\n                    <MenuItem onClick={handelRatingDisplay}>Sort By Rating</MenuItem>\r\n                    <MenuItem onClick={handelLatestFeedbackDisplay}>Latest</MenuItem>\r\n                </Menu>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        {/* Sorting Grid */}\r\n        <Grid\r\n            container\r\n            sx={classes.searchingContainer}\r\n            ref={searchingContainerRef}\r\n        >\r\n\r\n            {/* Date Picker container */}\r\n            <Grid\r\n                item\r\n                container\r\n                justifyContent={\"start\"}\r\n                alignItems={\"center\"}\r\n                xs={12} sm={12} md={12} lg={12} xl={12}\r\n                sx={classes.DatePickerGrid}\r\n            >\r\n                <Grid container direction=\"row\" justifyContent={\"center\"} alignItems={\"center\"} ref={sortByDate} sx={{ ...classes.datePicker }}>\r\n                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                        <TextField\r\n                            id=\"date\"\r\n                            label=\"Sort By Date\"\r\n                            type=\"date\"\r\n                            defaultValue={date}\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        // ref={sortByDate}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                        <Button onClick={() => getFeedbacksByDate()} variant=\"contained\" sx={classes.searchBtn}>\r\n                            search\r\n                        </Button>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n                {/* Rating Box */}\r\n                <Box ref={sortByRating} sx={{ ...classes.ratingBox }}>\r\n                    <Grid container flexDirection={\"row\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n                        <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Select Rating</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={rating}\r\n                                    label=\"Select Rating\"\r\n                                    onChange={(e) => setRating(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={0}>0 Star</MenuItem>\r\n                                    <MenuItem value={1}>1 Star</MenuItem>\r\n                                    <MenuItem value={2}>2 Star</MenuItem>\r\n                                    <MenuItem value={3}>3 Star</MenuItem>\r\n                                    <MenuItem value={4}>4 Star</MenuItem>\r\n                                    <MenuItem value={5}>5 Star</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {/* Search Button */}\r\n                        <Grid item xs={3} sm={3} md={3} lg={3} xl={3} >\r\n                            <Button onClick={() => getFeedbacksByRating()} variant=\"contained\" sx={classes.searchBtn}>\r\n                                search\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n\r\n                {/* latest Feedbacks search */}\r\n                <Box ref={sortBylatestFeedbacks} sx={{ ...classes.latestFeedbacks }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Day</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={day}\r\n                            label=\"Select day\"\r\n                            onChange={(e) => setDay(e.target.value)}\r\n                        >\r\n                            <MenuItem value={1}>1 day ago</MenuItem>\r\n                            <MenuItem value={2}>2 day ago</MenuItem>\r\n                            <MenuItem value={3}>3 day ago</MenuItem>\r\n                            <MenuItem value={4}>4 day ago</MenuItem>\r\n                            <MenuItem value={5}>5 day ago</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n\r\n                {/* Search Button */}\r\n                {/* <Button variant=\"contained\" sx={classes.searchBtn}>\r\n                    search\r\n                </Button> */}\r\n\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\r\n            {\r\n                ((() => {\r\n                    if (generalFeedbacks.length !== 0) return <Typography variant=\"h4\" sx={classes.sortingHeading}>latest Feedbacks</Typography>\r\n                    if (feedbacksByDate.length !== 0) return <Typography variant=\"h4\" sx={classes.sortingHeading}>Sorted By Date</Typography>\r\n                    if (feedbacksByRating.length !== 0) return <Typography variant=\"h4\" sx={classes.sortingHeading}>Sorted By Rating</Typography>\r\n                })())\r\n            }\r\n        </Grid>\r\n\r\n        {/* USER FEEDBACKS */}\r\n        <Grid container >\r\n\r\n            {/* <Grid\r\n                item\r\n                sx={{ border: \"5px solid green\" }}\r\n                xs={0.5} sm={0.5} md={0.5} lg={0.5} xl={0.5}\r\n            /> */}\r\n\r\n            <Grid\r\n                item\r\n                container\r\n                flexDirection={\"row\"}\r\n                xs={12} sm={12} md={12} lg={12} xl={12}\r\n            // style={{ border: \"5px solid green\" }}\r\n            >\r\n\r\n                {\r\n                    generalFeedbacks?.map((val, index) => {\r\n                        return (\r\n                            <Grid\r\n                                key={index}\r\n                                item\r\n                                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                                // sx={{ mt: 0, ml: \"2%\", mb: 0, mr: 0 }}\r\n                                sx={{ ml: \"2%\" }}\r\n                            >\r\n                                <GuestFeedbackCard\r\n                                    refetchData={refetchGeneralFeedback}\r\n                                    cardData={val}\r\n                                />\r\n                            </Grid>\r\n                        );\r\n                    })\r\n                }\r\n                {\r\n                    feedbacksByDate?.map((val, index) => {\r\n                        return (\r\n                            <Grid\r\n                                key={index}\r\n                                item\r\n                                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                                // sx={{ mt: 0, ml: \"2%\", mb: 0, mr: 0 }}\r\n                                sx={{ ml: \"2%\" }}\r\n                            >\r\n                                <GuestFeedbackCard\r\n                                    refetchData={refetchFeedbacksByDate}\r\n                                    \r\n                                    cardData={val}\r\n                                />\r\n                            </Grid>\r\n                        );\r\n                    })\r\n                }\r\n                {\r\n                    feedbacksByRating?.map((val, index) => {\r\n                        return (\r\n                            <Grid\r\n                                key={index}\r\n                                item\r\n                                xs={11} sm={11} md={11} lg={11} xl={11}\r\n                                // sx={{ mt: 0, ml: \"2%\", mb: 0, mr: 0 }}\r\n                                sx={{ ml: \"2%\" }}\r\n                            >\r\n                                <GuestFeedbackCard\r\n                                refetchData={refetchFeedbacksByRating}\r\n                                    \r\n                                    cardData={val}\r\n                                />\r\n                            </Grid>\r\n                        );\r\n                    })\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n    </>);\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    secondaryNav: {\r\n        // height: \"50px\",\r\n        background: \"#f2f2f2\"\r\n    },\r\n    showPublicFeedBacksContainer: {\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            paddingLeft: \"20px\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }\r\n\r\n    },\r\n    sortingContainer: {\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            paddingLeft: \"20px\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }\r\n    },\r\n    searchingContainer: {\r\n        background: \"#f2f2f2\",\r\n        marginTop: \"15px\",\r\n        paddingTop: \"15px\",\r\n        paddingBottom: \"15px\",\r\n        display: \"none\",\r\n    },\r\n    searchBtn: {\r\n        height: \"50px\",\r\n        marginLeft: \"2%\",\r\n        [theme.breakpoints.only(\"xs\")]: { marginTop: \"5px\" }\r\n    },\r\n    DatePickerGrid: {\r\n        marginLeft: \"5%\",\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"start\"\r\n        },\r\n    },\r\n    datePicker: {\r\n        width: { xs: \"80%\", sm: \"30%\" },\r\n        display: \"none\",\r\n    },\r\n    ratingBox: {\r\n        width: { xs: \"40%\", sm: \"30%\" },\r\n        display: \"none\"\r\n    },\r\n    latestFeedbacks: {\r\n        width: { xs: \"45%\", sm: \"30%\" },\r\n        display: \"none\"\r\n    },\r\n    ratingSelect: {\r\n        \"& .MuiSelect-select:hover\": { border: \"none\" }\r\n    },\r\n    sortingHeading: {\r\n        ml: \"3%\",\r\n        mt: 4\r\n    }\r\n\r\n});\r\n\r\nexport default AdminGuestFeedbacksPage;","import { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"../user/home.Page\";\r\nimport SignUpPage from \"../user/signUp.Page\";\r\nimport FeedBackPage from \"../user/feedback.Page\";\r\nimport PreviousFeedbackPage from \"../user/previousFeedback.Page\"\r\nimport UserProfilePage from \"../user/userProfile.Page\"\r\nimport Footer from \"../components/footer.Component\"\r\nimport AdminFeedbacksPage from \"../admin/adminFeedbacks.Page\"\r\nimport AdminProfilePage from \"../admin/adminProfile.Page\"\r\nimport AdminQuestionsPage from \"../admin/adminQuestions.Page\";\r\nimport { useRouteMatch, withRouter } from \"react-router-dom\";\r\nimport PublicFeedbacksPage from \"../user/publicFeedbacks.Page\";\r\nimport GuestFeedBackPage from \"../user/guestFeedback\"\r\nimport AdminGuestFeedbacksPage from \"../admin/adminGuestsFeedbacks\"\r\n\r\n\r\nconst AppRoutes = (props) => {\r\n\r\n\r\n    return (<>\r\n        <Switch>\r\n\r\n            {/* User Routes */}\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/signup\" component={SignUpPage} />\r\n            <Route path=\"/user-profile\" component={UserProfilePage} />\r\n            <Route path=\"/feedback\" component={FeedBackPage} />\r\n            <Route path=\"/previous-feedbacks\" component={PreviousFeedbackPage} />\r\n            <Route path=\"/public-reviews\" component={PublicFeedbacksPage} />\r\n            <Route path=\"/guest-feedback\" component={GuestFeedBackPage} />\r\n\r\n\r\n            {/* Admin routes */}\r\n            <Route path=\"/admin-profile\" component={AdminProfilePage} />\r\n            <Route path=\"/admin-feedbacks\" component={AdminFeedbacksPage} />\r\n            <Route path=\"/admin-questions\" component={AdminQuestionsPage} />\r\n            <Route path=\"/admin-guest-feedbacks\" component={AdminGuestFeedbacksPage} />\r\n\r\n        </Switch>\r\n        {/* <Footer /> */}\r\n\r\n    </>);\r\n}\r\n\r\nexport default AppRoutes;","import ResponsiveFontSize from \"./components/responsiveFontSize.Component.js\"\nimport AppRoutes from \"./routes/routes.js\";\nfunction App() {\n\n  return (\n    <>\n      <ResponsiveFontSize>\n        <AppRoutes/>\n      </ResponsiveFontSize>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore }from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./userSlice\"\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        users: userReducer,\r\n    },\r\n  });\r\n\r\n  export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// to log results (for example: reportWebVitals(console.log))\n\nreportWebVitals();\n"],"sourceRoot":""}